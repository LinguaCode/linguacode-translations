{
  "blocks":{
    "controlPanelBlock":{
      "edit":"Muokkaa",
      "delete":"Poista"
    },
    "lovePanelBlock":{
      "like":"Kuten",
      "liked":"Pidin",
      "star":"Tähti",
      "starred":"Tähdellä"
    },
    "moreFromUserBlock":{
      "viewAll":"Näytä kaikki",
      "moreFromFirst":"Lisää",
      "moreFromLast":""
    },
    "programListFilterBlock":{
      "sortBy":"Lajittele",
      "recent":"Viime",
      "views":"Näkymät",
      "stars":"Tähdet",
      "likes":"Tykkää",
      "random":"Satunnainen"
    },
    "shareBlock":{
      "link":"Linkki",
      "share":"Jaa",
      "tweet":"Tweet",
      "textTwitter":"Ohjelma \"${programTitle}\" ${userName} #LinguaCode ${userPageLink}",
      "descriptionVK":"LinguaCode on sosiaalinen koodaus alustan ja on suunniteltu erityisesti lapsille, jossa he voivat oppia ohjelmointi ja jakaa niiden koodien kanssa äidinkielellään ja ilman tarvetta tietäen englanti."
    },
    "userPrimaryInfoBlock":{
      "editProfile":"Muokkaa profiilia"
    },
    "userSecondaryInfoBlock":{
      "joinedOn":"Liittynyt"
    }
  },
  "pages":{
    "errorPage":{
      "title":"Virhe",
      "explanation":"Anteeksi, kriittinen virhe on tapahtunut tällä sivulla."
    },
    "landingPage":{
      "title":"LinguaCode: Oppiminen Koodaus",
      "learningByCoding":"Oppimisen <span className=\"masthead--lora-italic\">by Coding</span>",
      "explanation":"Teemme oppimisesta ohjelmointi ja koodaus niin täynnä iloa ja elämää, sinun nauraa ääneen.",
      "facebookSignIn":"Kirjaudu sisään Facebook",
      "or":"tai",
      "seeTheListOfPrograms":"Katso lista olemassa ohjelmia",
      "descriptionHead":"Paras uusi tapa oppia ohjelmointia.",
      "descriptionBody":"LinguaCode on sosiaalinen koodaus alustan ja on suunniteltu erityisesti lapsille, jossa he voivat oppia ohjelmointi ja jakaa niiden koodien kanssa äidinkielellään ja ilman tarvetta tietäen englanti.",
      "advantagesHeadline":"LinguaCode auttaa sinua <span className=\"u-emphasized\">learn parempi </span>",
      "advantageTopFirstHeadline":"Monikielinen",
      "advantageTopFirstDescription":"Kirjoittaa ohjelmia oman äidinkielen, eikä vain.",
      "advantageTopSecondHeadline":"Se on ilmainen!",
      "advantageTopSecondDescription":"Kaikki on ilmaiseksi.",
      "advantageTopThirdHeadline":"Quick start",
      "advantageTopThirdDescription":"Aloittaminen on paljon helpompaa kuin luulet!",
      "advantageBottomFirstHeadline":"Mielikuvitus",
      "advantageBottomFirstDescription":"Oppia, kokeilla, Luoda!",
      "advantageBottomSecondHeadline":"Koulutus",
      "advantageBottomSecondDescription":"Oppia ohjelmointia, sekä muita aiheita.",
      "advantageBottomThirdHeadline":"Yhteisön",
      "advantageBottomThirdDescription":"Jaa ohjelmia ystävien kanssa ja löytää uusia ystäviä.",
      "joinText":"Liity <span className=\"u-emphasized\">the community</span> oppijoiden",
      "facebookRegister":"Rekisteröidy nyt, se on ILMAINEN!"
    },
    "notFoundPage":{
      "title":"Sivua Ei Löydy",
      "explanation":"Anteeksi, mutta sivu jota yritit katsoa ei ole olemassa.",
      "descriptionPartFirst":"Kokeile menossa",
      "descriptionPartSecond":"pääsivu",
      "descriptionPartThird":"sen sijaan."
    },
    "programChangePage":{
      "titleOfEditPage":"Muokkaa ${userName}/${title} ohjelma",
      "editProgramHeadline":"Muokkaa ohjelma",
      "editProgramButton":"Muokkaa Ohjelman",
      "titleOfCreatePage":"Luoda uuden ohjelman",
      "newProgramHeadline":"Luoda uuden ohjelman",
      "submitProgramButton":"Lähetä Ohjelma",
      "programContent":"Ohjelma sisältää kaikki tiedot koodi.",
      "name":"Nimi",
      "programNameForm":"Hyvä ohjelma nimet ovat lyhyt ja mieleenpainuva, kuten <b>hello-world</b>.",
      "titleOfProgram":"Otsikko",
      "description":"Kuvaus",
      "validationError":"Validointi virhe",
      "errorTextForNameLength":"Pituus <b>name</b> olisi yli 0 ja alle 32, se tulisi koostua latinalaisen symboleja ja viivoja.",
      "errorTextForName":"Tämän lähteen nimi on jo käytössä.",
      "errorTextForTitle":"Pituus <b>title</b> olisi yli 0 ja alle 128.",
      "errorTextForDescription":"Pituus <b>description</b> olisi enemmän kuin 0 ja pienempi sitten 5120.",
      "errorTextForSource":"Pituus <b>source</b> olisi enemmän kuin 0 ja pienempi sitten 10240."
    },
    "programs":{
      "title":"Ohjelmat"
    },
    "settingsPage":{
      "title":"Asetukset",
      "publicProfile":"Julkinen profiili",
      "validationError":"Validointi virhe",
      "username":"Käyttäjätunnus",
      "yourUsername":"Käyttäjätunnus",
      "usernameWasAlreadyUsed":"Käyttäjätunnus oli jo käytetty",
      "usernameWasReserved":"Käyttäjätunnus oli varattu",
      "usernameValidation":"Pituus <b>username</b> pitäisi olla alle 24, ja sisältävät pienet kirjaimet latinan ja numeroita.",
      "name":"Nimi",
      "yourFirstNameAndLastName":"Ensimmäinen nimi ja sukunimi",
      "nameValidation":"Pituus <b>name</b> pitäisi olla yli 0 ja alle 24",
      "bio":"Bio",
      "tellALittleAboutYourself":"Kerro hieman itsestäsi",
      "bioValidation":"Pituus <b>bio</b> pitäisi olla alle 128.",
      "country":"Maa",
      "select":"valitse",
      "countryValidation":"Valitse kaikki maat",
      "updateProfile":"Päivitä profiili"
    }
  },
  "modals":{
    "loginRequiredModal":{
      "signInTitle":"Kirjaudu sisään",
      "signInDescription":"Toiminta on mahdollista vain, kun olet kirjautunut sisään."
    },
    "programDeleteModal":{
      "programDeleteConfirmation":"Oletko varma, että haluat poistaa ohjelman ?",
      "answerYes":"kyllä",
      "answerNo":"ei"
    },
    "syntaxInfoModal":{
      "cheatSheet":{
        "outputName":"Lähtö",
        "outputNameValue":"``linguacode\nlähtö(X)\n``",
        "outputDescription":"Tulostaa minkä tahansa X: n arvo: numerot, toiminta, tekstin ja muuttujan arvoja. Esimerkiksi",
        "outputDescriptionValue":"``linguacode\nlähtö(4) # 4\ntuotos(\"Hei\") # Terve\nlähtö(1+2) # 3\n``",
        "inputName":"Input",
        "inputNameValue":"``linguacode\ninput(X)\n``",
        "inputDescription":"Kaikki X-muuttujan arvo julistaa käyttäjä. Esimerkiksi",
        "inputDescriptionValue":"``linguacode\ninput ()\n``",
        "ifElseStatementName":"Tarkkailun lausunto",
        "ifElseStatementNameValue":"``linguacode\njos <condition N1> sitten\n<operation N1>\nmuuta jos <condition N2> sitten\n<operation N2>\nmuuta\n<operation N3>\n``",
        "ifElseStatementDescription":"Toimintaa toteutetaan perustuen määritetty ehto on tosi. Esimerkiksi",
        "ifElseStatementDescriptionValue":"``linguacode\na = 5\nb = 5\njos a > b, niin\ntuotos(\"a > b\")\nelse if a < b then\ntuotos(\"a < b\")\nmuuta\ntuotos(\"b ==\") # b: = = \n``",
        "loopForName":"Rajoitettu toista",
        "loopForNameValue":"``linguacode\ntoista kertaa <N>\n<operation>\n``",
        "loopForDescription":"Suorittaa koodin useita kertoja. Esimerkiksi",
        "loopForDescriptionValue":"``linguacode\ntoista 10 kertaa\ntuotos(\"Terve\")\n``",
        "loopWhileDoName":"Loop \"Vaikka Tehdä\"",
        "loopWhileDoNameValue":"``linguacode\nkun <condition> sitten\n<operation>\n``",
        "loopWhileDoDescription":"\"Vaikka Tehdä\" silmukka suorittaa läpi korttelin koodia niin kauan kuin määritelty ehto on tosi. Esimerkiksi",
        "loopWhileDoDescriptionValue":"``linguacode\na = 1\nkun a < 5 sitten\nlähtö(a)\na = a + 1\n``",
        "loopDoWhileName":"Silmukka \"Do While\"",
        "loopDoWhileNameValue":"``linguacode\ntehdä\n<operation>\nkun <condition>\n``",
        "loopDoWhileDescription":"Silmukka \"Do Vaikka\" toista silmukka niin kauan kuin ehto on tosi. Esimerkiksi",
        "loopDoWhileDescriptionValue":"``linguacode\na = 1\ntehdä \nlähtö(a)\na = a + 1\nkun a < 5\n``",
        "piName":"matemaattinen vakio pi",
        "piNameValue":"``linguacode\nlähtö(pi)\n``",
        "piDescription":"Tulostaa matemaattinen vakio <b>pi</b>. Esimerkiksi",
        "piDescriptionValue":"``linguacode\nlähtö(pi) # 3.141592653589793\n``",
        "eNumberName":"matemaattinen vakio e",
        "eNumberNameValue":"``linguacode\nlähtö(e)\n``",
        "eNumberDescription":"Tulostaa matemaattinen vakio <b>e</b>. Esimerkiksi",
        "eNumberDescriptionValue":"``linguacode\nlähtö(e) # 2.718281828459045\n``",
        "sqrName":"Neliön numero",
        "sqrNameValue":"``linguacode\nsqr(X)\n``",
        "sqrDescription":"Palaa neliön <b>X</b> numero syöttää käyttäjä. Esimerkiksi",
        "sqrDescriptionValue":"``linguacode\nX = 5 \nY = sqr(X) \noutput(Y) # 25\n``",
        "powName":"Teho määrä",
        "powNameValue":"``linguacode\npow(X,Y)\n``",
        "powDescription":"Palauttaa arvon <b>X</b> valtaa <b>Y</b>. Esimerkiksi",
        "powDescriptionValue":"``linguacode\nX = 2 \nY = 5 \nZ = pow(X, Y) \nlähtö(Z) # 32\n``",
        "sqrtName":"Neliöjuuren numeron",
        "sqrtNameValue":"``linguacode\nsqrt(X)\n``",
        "sqrtDescription":"Palauttaa neliöjuuren <b>X</b> numero syöttää käyttäjä. Esimerkiksi",
        "sqrtDescriptionValue":"``linguacode\nX = 9 \nY = sqrt(X) \noutput(Y) # 3\n``",
        "absName":"Absoluuttinen arvo numero",
        "absNameValue":"``linguacode\nabs(X)\n``",
        "absDescription":"Palauttaa luvun absoluuttisen arvon <b>X</b> numero syöttää käyttäjä. Esimerkiksi՝",
        "absDescriptionValue":"``linguacode\nX = -5 \nY = abs(X) \noutput(Y) # 5\n``",
        "roundName":"Numero pyöristys",
        "roundNameValue":"``linguacode\npyöreä(X)\n``",
        "roundDescription":"Kierroksia on <b>X</b> määrä lähimpään kokonaislukuun ja palauttaa arvon. Esimerkiksi",
        "roundDescriptionValue":"``linguacode\nX = 2.3 \na = round(X) \nlähtö(a) - # 2\n``",
        "floorName":"Numero kerroksessa",
        "floorNameValue":"``linguacode\nlattia(X)\n``",
        "floorDescription":"Kierroksia on <b>X</b> numero <b>downwards</b> lähimpään kokonaislukuun ja palauttaa arvon. Esimerkiksi",
        "floorDescriptionValue":"``linguacode\nX = 2.6 \na = floor(X) \nlähtö(a) - # 2\n``",
        "ceilName":"Numero ceil",
        "ceilNameValue":"``linguacode\nceil(X)\n``",
        "ceilDescription":"Kierroksen <b>X</b> numero <b>upwards</b> sen lähimpään kokonaislukuun ja palauttaa arvon",
        "ceilDescriptionValue":"``linguacode\nX = 2.2 \na = ceil(X) \nlähtö(a) - # 3\n``",
        "sinName":"Sini",
        "sinNameValue":"``linguacode\nsin(X)\n``",
        "sinDescription":"Palauttaa arvon <b>sine</b> on <b>X</b> numero. Esimerkiksi",
        "sinDescriptionValue":"``linguacode\nX = sin(pi) \nlähtö(X) # 0\n``",
        "cosName":"Kosini",
        "cosNameValue":"``linguacode\ncos(X)\n``",
        "cosDescription":"Palauttaa arvon <b>cosine</b> on <b>X</b> numero. Esimerkiksi",
        "cosDescriptionValue":"``linguacode\nX = cos(pi) \nlähtö(X) # -1\n``",
        "tanName":"Tangentti",
        "tanNameValue":"``linguacode\ntan(X)\n``",
        "tanDescription":"Palauttaa arvon <b>tangent</b> on <b>X</b> numero. Esimerkiksi՝",
        "tanDescriptionValue":"``linguacode\nX = tan(pi) \nlähtö(X) # 0\n``",
        "ctgName":"Tulos vastaa",
        "ctgNameValue":"``linguacode\nctg(X)\n``",
        "ctgDescription":"Palauttaa arvon <b>cotangent</b> on <b>X</b> numero. Esimerkiksi՝",
        "ctgDescriptionValue":"``linguacode\nX = ctg(pi/4) \nlähtö(X) # 1\n``",
        "arcSinName":"Kaarisinin",
        "arcSinNameValue":"``linguacode\narcsin(X)\n``",
        "arcSinDescription":"Palauttaa arvon, jossa sini saa saman arvon kuin <b>X</b>. Esimerkiksi",
        "arcSinDescriptionValue":"``linguacode\na = arcsin(1) \nlähtö(a) # pi/2 \n``",
        "arcCosName":"Kaarikosinin",
        "arcCosNameValue":"``linguacode\narccos(X)\n``",
        "arcCosDescription":"Palauttaa arvon missä kosini saa saman arvon kuin <b>X</b>. Esimerkiksi",
        "arcCosDescriptionValue":"``linguacode\na = arccos(1) \nlähtö(a) # 0\n``",
        "arcTanName":"Arkustangentin",
        "arcTanNameValue":"``linguacode\narctan(X)\n``",
        "arcTanDescription":"Palauttaa arvon, jossa tangentti saa saman arvon kuin <b>X</b>. Esimerkiksi",
        "arcTanDescriptionValue":"``linguacode\na = arctan(0) \nlähtö(a) # 0\n``",
        "arcCtgName":"Arccotangent",
        "arcCtgNameValue":"``linguacode\narcctg(X)\n``",
        "arcCtgDescription":"Palauttaa arvon, jos tulos vastaa saa saman arvon kuin <b>X</b>. Esimerkiksi",
        "arcCtgDescriptionValue":"``linguacode\na = arcctg(1) \nlähtö(a) # pi/4\n``",
        "logName":"Logaritmi",
        "logNameValue":"``linguacode\nlog(X,Y)\n``",
        "logDescription":"Palauttaa arvon logaritmin <b>X</b> pohja <b>Y</b>. Esimerkiksi",
        "logDescriptionValue":"``linguacode\na = log(3,27) \nlähtö(a) - # 3\n``",
        "lgName":"Yleinen logaritmi",
        "lgNameValue":"``linguacode\nlg(Y)\n``",
        "lgDescription":"Palauttaa arvon logaritmin <b>X</b> pohja <b>10</b>. Esimerkiksi",
        "lgDescriptionValue":"``linguacode\na = lg(100) \nlähtö(a) # 10\n``",
        "lnName":"Luonnollinen logaritmi",
        "lnNameValue":"``linguacode\nln(Y)\n``",
        "lnDescription":"Palauttaa arvon logaritmin <b>X</b> pohja <b>e</b>. Esimerkiksi",
        "lnDescriptionValue":"``linguacode\na = ln(e) \nlähtö(a) # 1\n``",
        "randomName":"Random numero tuottavan",
        "randomNameValue":"``linguacode\nsatunnainen(X,[Y])\n``",
        "randomDescription":"Jos parametri <b>Y</b> on annettu, ohjelma satunnaisesti tuottaa ja palauttaa satunnainen kokonaisluku numero range<b>[X; Y]</b>. Mutta ilman <b>Y</b> parametri alue on <b>[0; X]</b>. Esimerkiksi",
        "randomDescriptionValueFirst":"``linguacode\nX = 10 \na = random(X) # [0; 10]\nlähtö(a) # 4 \n``",
        "randomDescriptionValueSecond":"``linguacode\nX = 5 \nY = 15 \na = random(X,Y) # [5; 15]\nlähtö(a) - # 12\n``"
      },
      "tutorials":{
        "intro":"Esittely",
        "output":"Lähtö",
        "variables":"Muuttujat",
        "input":"Input",
        "operations":"Toimintaa",
        "conditions":"Ehtoja",
        "boolean":"Boolean",
        "languageAboutLanguageTitle":"Noin Kieltä",
        "languageAboutLanguageContent":"LinguaCode on luotu kaikille niille, jotka haluavat oppia ohjelmoinnin perusasiat mukava tapa. \nOppia LinguaCode se ei ole välttämätöntä, että kielitaito tai tekninen osaaminen. Kaikki mitä tarvitset on halua oppia ja huolellisuutta. \n\n#### Ominaisuudet:\n- **Monikielinen**\n- **Multiplatform**\n- **Yksinkertainen lähdekoodia**\n- **Ilmainen**\n",
        "languageFeaturesTitle":"Kielen Ominaisuuksia",
        "languageFeaturesContent":"LinguaCode perustuu Python, Pascal ja JavaScript, joten se on helppo ymmärtää, yksinkertainen lähdekoodia ja sitten opetella uusi ohjelmointikieli nopeammin. \n\n**Tässä ovat kaikki peruskäsitteet kieli:**\n\n- **Jokainen komento alkaa uusi rivi.** \nLähdekoodin tulee olla yksinkertainen ja selkeä, että tavalla.\n- **Komennot voidaan kirjoittaa sekä isoja ja pieniä kirjaimia.** \nSe nopeuttaa prosessia ohjelmointi, mutta se on edullista kirjoittaa pieniä kirjaimia.\n- **Teksti voi olla kirjoitettu välillä sekä lainausmerkit ja heittomerkit.** \nMonissa maissa ei ole lainausmerkkejä käyttää, joten täällä voit valita kätevä versio.\n- **Teksti on kirjoitettu sen jälkeen, kun symboli \"\\#\" pidetään kommentti ja ei vaikuta työn lähdekoodia.** \nKommentit ovat säädetty muistiinpanoja.",
        "outputCommandDefinitionTitle":"Komento määritelmä",
        "outputCommandDefinitionContent":"Jokainen ohjelma, joka tekee joissakin toiminnoissa, pitäisi näyttää meille tietoa tulos. Siksi kaikki ohjelmointi järjestelmät ovat tekstinä mahdollisuus ja paikka, jossa voimme nähdä tuloksen, joka on nimeltään **Terminaali**. \n\nKomento \"*lähtö*\" käytetään tekstinä. \n\n#### Esimerkiksi \nLähdekoodin``linguacode\ntuotos(\"Terve\")\n``Tulos``pääte\nHei\n``",
        "outputPossibleValuesTitle":"Mahdolliset arvot",
        "outputPossibleValuesContent":"Komennon tulosteen voi tulostaa tekstiä, numeroita, matemaattisia operaatioita ja muuttuja-arvoja.\n\n#### Esimerkiksi \nLähdekoodi \n``linguacode\nlähtö(100)\ntuotos(5 * 25)\n``Tulos``pääte\n100\n125\n``",
        "variablesDeclaresAndAssignsTitle":"Julistaa ja luovutus",
        "variablesDeclaresAndAssignsContent":"Usein meidän täytyy tallentaa teksti -, numero-ja laskutehtäviä jonnekin, jossa tarkoituksena on käyttää sitä uudelleen. Kontit, joissa voimme tallentaa eri arvoja kutsutaan **muuttujat**. Ensin meidän täytyy antaa nimi muuttujan ja määritä sitten arvo. Sen jälkeen voimme viitata arvo, yksinkertaisesti soittamalla muuttuja, jossa sen nimi. \nMuuttujat tallennetaan Random-access memory (RAM) tietokoneen, ja kun käytämme muuttujaa, tietokone palauttaa arvo, joka vastaa muuttujan nimi RAM.\n#### Tärkeää muistaa,\nMuuttujien nimet \n**1.** Voi sisältää kirjaimia, symboleita tai numeroita \n**2.** Ei voi alkaa numerolla \n**3.** Voi olla tilaa ja symbolit aritmeettiset toiminnot\n#### Esimerkiksi \nTulostuksen lukumäärä **617** tämän sijaan \n``linguacode\nlähtö(617)\n``\nme kirjoittaa\n``linguacode\nX = 617\nlähtö(X)\n``\nTulos\n``pääte\n617\n`` \nJa jos haluamme tuottaa sama arvo kolme kertaa, me kirjoittaa \n``linguacode\nX = 617\nlähtö(X)\nlähtö(X)\nlähtö(X)\n`` \nTulos \n``pääte\n617\n617\n617\n``",
        "variablesPracticalUseTitle":"Käytännön käyttö",
        "variablesPracticalUseContent":"Kuten näemme, emme voi määrittää sekä numeerinen ja teksti arvot muuttujille. Mutta usein meidän täytyy määrittää muuttujan arvoa, joka oli osoitettu toiselle. Tässä tapauksessa voimme määrittää jo olemassa olevan muuttujan uuteen.\n#### Esimerkiksi \nLähdekoodi\n``linguacode\na = 1\nb = 2\nc = a + b\nlähtö(c)\n`` \nTulos\n``pääte\n3\n``\n",
        "variablesMultipleUsesTitle":"Useita käyttö",
        "variablesMultipleUsesContent":"Sinun ei tarvitse luoda uusi muuttuja uusi arvo joka kerta. Voimme myös muuttaa arvoja muuttujille. Meidän tulee välttää tarpeettomia muuttujia ja lähdekoodi on enemmän yksinkertainen, että tavalla.\n#### Esimerkiksi\nOletetaan, että meillä on **100** omenat ja tallenna tämä arvo **apple** muuttuja. Määrä omenoita oli laskussa vuoteen **5** joka päivä. \nMeidän on tuotannon määrä omenoita joka päivä. \n\nLähdekoodi\n``linguacode\napple = 100\nlähtö(apple)\n\napple = apple - 5 # 95\nlähtö (apple)\n\napple = apple - 5 # 90\nlähtö(apple)\n\napple = apple - 5 # 85\nlähtö(apple)\n`` \nTulos\n``pääte\n100\n95\n90\n85\n``",
        "inputCommandDefinitionTitle":"Komento määritelmä",
        "inputCommandDefinitionContent":"Ohjelmointi tarvitaan sekä lähtö ja monissa tapauksissa input tiedot. Me tarvitsemme sitä, kun muuttujat voivat saada minkä tahansa arvon. Me voimme myös muuttaa lähdekoodia joka kerta ja antaa uusia arvoja muuttuja, mutta se ei ole tehokas ja tarpeet liian kauan. \n\nTässä tapauksessa käytämme komentoa \"*input*\". \n\nJa tässä on yksinkertainen esimerkki ohjelma, joka tulostaa kahden hengen numero syöttää käyttäjä. ``linguacode\ninput(numero)\ntuotanto(määrä * 2)\n`` Kun käynnissä tämän ohjelman voimme nähdä symboli \"**>**\", joka tarkoittaa, että ohjelma on alkanut, ja meidän täytyy syöttää puuttuvat tiedot. Kun olet syöttänyt minkä tahansa numeron ja painamalla **Enter** näemme kaksinkertainen syötetyn numeron. ``pääte\n>617\n1234\n``Enimmäkseen meidän täytyy kirjoittaa ohjelmia, joita voidaan käyttää ihmiset, jotka eivät edes tiedä, ohjelmointi.",
        "inputWorkMechanismTitle":"Työ mekanismi",
        "inputWorkMechanismContent":"Nyt voimme nähdä, miten command input toimii. Esimerkiksi meillä on tämä ohjelma, ``linguacode\ntuotos(\"Syötä käyttäjätiedot:\")\ntuotos(\"Nimi:\")\ninput(nimi)\ntuotos(\"Sukunimi:\")\ninput(sukunimi)\ntuotos(\"Hei\" + nimi + \"\" + sukunimi)\n` Kuten näemme, on 6 riviä meidän ohjelma. \nKun käynnissä, se me voidaan nähdä, että ohjelma toimi ennen kuin linja 3.``terminaali\nSyötä käyttäjätiedot:\nNimi:\n>\n`` Syöttämisen jälkeen jääneet tiedot, voimme nähdä, että nyt se toimi, kunnes linja 5.``terminaali\nSyötä käyttäjätiedot:\nNimi:\n>Marine\nSukunimi:\n>\n` Ja nyt kun olet syöttänyt viimeisen sekaisin tiedot ohjelma toimii ja loppu.``terminaali\nSyötä käyttäjätiedot:\nNimi:\n>Marine\nSukunimi:\n>Chamchyan\nHei, Meren Chamchyan\n` Joten me näki, että tällä komennolla ohjelma toimii osa kerrallaan erillistä input jääneet tiedot.",
        "operationsArithmeticOperatorsTitle":"Laskutoimituksia",
        "operationsArithmeticOperatorsContent":"Vuonna LinguaCode se on mahdollista toteuttaa yksinkertaisia laskutoimituksia, kuten **+**, **-**, **\\***, **/**. \n\nEsimerkiksi tämä ohjelma tekee kaikki laskutoimitukset kanssa **1** ja **2** numerot. ``linguacode\nlähtö(1 + 2) # 3\nlähtö(1 - 2) # -1\nlähtö(1 * 2) # 2\nlähtö(1 / 2) # 0.5\n` ` #### Tärkeää muistaa, \nKuten tiedämme, Matematiikka kertolasku muuttujan toisen muuttujan tai numero voidaan kirjoittaa ilman symboli kerto. Esimerkiksi *7 kertaa X* on kirjoitettu **7X** tai *X kertaa Y* **XY**. \nMutta ohjelmointi on tärkeää kirjoittaa symboli kerto. Esimerkiksi **7 \\* X** tai **X \\* Y**.",
        "operationsExecutingPriorityTitle":"Toimintojen suorittamista prioriteetti",
        "operationsExecutingPriorityContent":"Sekä Matematiikka ja ohjelmointi, jos on jako-tai kerto -, meidän on ensin tehdä ja vasta sitten, kun me tehdä ja vähennyslaskua. \n\n#### Esimerkiksi ``linguacode\nX = 10 + 2 * 4 - 2\n# X = 10 + 8 - 2\n# X = 18 - 2\n# X = 16\n` Mutta emme voi muuttaa täytäntöönpanosta ensisijaisten käyttämällä suluissa. \n#### Esimerkiksi ``linguacode\nX = (10 + 2) * (4 - 2)\n# X = 12 * (4 - 2)\n# X = 12 * 2\n# X = 24\n``Ohjelmointi voimme käyttää suluissa, vaikka ne ovat tarpeettomia. \nSe ei ole väärin, mutta se on edullista kirjoittaa yksinkertainen ja selkeä lähdekoodia, joka on helppo ymmärtää toisia.",
        "operationsNumbersTitle":"Numerot",
        "operationsNumbersContent":"Kuten tiedämme <a href=\"https://en.wikipedia.org/wiki/Number\" target=\"_blank\">numbers</a> ovat matemaattisia objekteja käytetään laskea, mitata ja merkitä. \nOn olemassa 5 erilaista numeroita. Käsittelemme ne kaikki, lukuun ottamatta monimutkaisia numbes \n- ** luonnolliset luvut** **1**, **2**, ...``linguacode\nlähtö(7 + 4) # 13\n`` \n- **kokonaisluku numerot** ..., **-1**, **0**, **1**, ...``linguacode\nlähtö(-6 * 5 + -3) # -33\n`` \n- **järkevä numerot** **1/2**, **2/3**, **0.125**, ...``linguacode\nlähtö(0.617 * 2 * 1000) # 1234\n`` \n- **todellinen määrä** **√2**, **1.62**, ...``linguacode\nlähtö(2/3 + 1/2) # 1\n``",
        "operationsSumOfStringAndNumberTitle":"Summa merkkijonoja ja numeroita",
        "operationsSumOfStringAndNumberContent":"Kuten näemme, se on mahdollista lisätä sekä numeroita ja tekstejä toisiinsa, joka johtaa linjat on yhdistetty yhdelle riville. Mutta usein meidän täytyy saada linjassa, jossa on käytetty numeerinen arvo. Tässä tapauksessa se on mahdollista lisätä teksti, numero, johon tulos numero on muokattu ja yhdistetty teksti kuin teksti.``linguacode\ntext = \"on\" + 365 + \"päivää vuonna\"\n# text = \"on\" + \"365\" + \"päivää vuonna\"\n# text = \"365\" + \"päivää vuonna\"\n# text = \"on 365 päivää vuodessa\"\n` ` #### Tärkeää muistaa, \nLinjat voimme tehdä vain lisäämällä toimintaa. Kun teet muita toimintoja johtaa virhe.",
        "conditionsCommandsIfTitle":"Komento \"Jos\"",
        "conditionsCommandsIfContent":"Joskus ohjelmointi täytyy suorittaa joitakin toiminta perustuu kunnossa. Se on edellytys tarkkailun komentoja, kuten \"Jos\", \"If-else\" ja \"Muuten Jos\". \n\nKirjoittaminen muodossa komento \"**Jos**\" ``linguacode\njos <condition> sitten\n<operation>\n` Täällä välillä komentoja \"Jos\" ja \"sitten\" on kaikki kunnossa, ja kun se uusi rivi ja sen jälkeen **4 tilat** on kirjoitettu toiminnon (tai toimintojen), joka on tehtävä, jos lausuma on totta. \n\n#### Esimerkiksi ``linguacode\na = 5\nb = 2\njos a > b, niin\ntuotos(\"a > b\")\n``",
        "conditionsCommandsIfElseTitle":"Komennon \"If-Else\"",
        "conditionsCommandsIfElseContent":"Joten me tiedämme, miten käyttää ehdollisen lausunnon ohjelmia. Nyt voimme keskustella silloin, kun ehto on epätosi.\n\nKirjoittaminen muodossa \"**If-Else**\" ilmoitus ``linguacode\njos <condition> sitten\n<operation N1>\nmuuta\n<operation N2>\n` Täällä kun komento \"Jos\" siellä on uusi komento \"Muu\". Ja uusi rivi, kun 4 välilyöntejä on kirjoitettu toiminto, joka on tehtävä, jos mainittu ehto on epätosi.\n\n#### Esimerkiksi ``linguacode\na = 5\nb = 10\njos a > b\ntuotos(\"a > b\")\nmuuta\ntuotos(\"b <\")\n``",
        "conditionsCommandsElseIfTitle":"Komento \"Muuta-Jos\"",
        "conditionsCommandsElseIfContent":"Olemme jo keskustelleet jossa komento suoritetaan perustuu ehto on tosi tai epätosi. Mutta joskus meidän täytyy tarkistaa enemmän kuin yksi ehto samaan aikaan. \n\nKirjoittaminen muodossa \"**If-Else-If**\" ilmoitus``linguacode\njos <condition N1> sitten\n<operation N1>\nmuuta jos <condition N2> sitten\n<operation N2>\nmuuta\n<operation N3>\n` Täällä meidän täytyy tarkistaa enemmän kuin yksi ehto. Jos \"Muuta-Jos\" kirjallinen muoto ei voi olla 1 tai enemmän \"Muuta-Jos\" lausuntoja välillä komentoja \"Jos\" ja \"Muu\". \n\n#### Esimerkiksi ``linguacode\na = 5\nb = 5\njos a > b, niin\ntuotos(\"a > b\")\nelse if a < b then\ntuotos(\"a < b\")\nmuuta\ntuotos(\"b ==\")\n``",
        "booleanTypesBooleanTitle":"Kuvaus",
        "booleanTypesBooleanContent":"Tiedämme jo, miten tarkistaa lausuntoja, ja jotkin niistä voivat olla *todellinen* (22 > 18) tai *false* (16 > 18). Joskus, koska pituus kunto tarkistaa linja, se tulee vaikea lukea lähdekoodia. Tässä tulee auttaa boolean-arvot \n\n- **totta** ``linguacode\nehto = true\nlähtö(ehto) #true\n`` \n\n- **false**``linguacode\nehto = false\nlähtö(ehto) #false\n`` Mikä tahansa boolean vertailu tiedossa meille palauttaa yhden annettuja arvoja \n\nEsimerkki *totta* vertailu ``linguacode\nehto = 1 < 5\nlähtö(ehto) # true\n`` Exemple *false* vertailu ``linguacode\nkunto = 10 < 5\nlähtö(ehto) # false\n`` Joten kunto tarkistaa komentoja voimme käyttää muuttujia, joilla on boolean-arvot. \n\n#### Esimerkiksi ``linguacode\ntuotos(\"Kirjoita numero \"a\":\")\ninput ()\n\ntuotos(\"Kirjoita numero \"b\":\")\ninput(b)\n\ncondition1 = a > b\ncondition2 = a < b\n\njos condition1 sitten\ntulos = \"a > b\"\nmuuta jos condition2 sitten\ntulos = \"a < b\"\nmuuta\ntulos = \"a == b\"։\ntuotos(\"Tulos:\" + tulos)\n``",
        "booleanOperatorsComparisonTitle":"Vertailu operaattorit",
        "booleanOperatorsComparisonContent":"Vuonna kunto tarkistaa komentoja olemme jo käyttää symboleja \"suurempi kuin\" > ja \"vähemmän kuin\" < vertailun operaattorit. Mutta nyt täällä voimme käyttää mitä tahansa muita toimijoita tiedossa meille. \n\n- **>** vertaillaan numeerisia arvoja, joista ensimmäinen on *#suurempi* kuin toinen. Esimerkiksi ``linguacode\ntuotos(5 > 1) # true\nlähtö(1 - > 5) # false\n`` \n\n- **>=** vertaillaan numeerisia arvoja, joista ensimmäinen on *#suurempi tai yhtä suuri* toinen yksi. Esimerkiksi ``linguacode\ntuotos(5 >= 5) # true\nlähtö(1 >= 5) # false\n`` \n\n- **<** vertaillaan numeerisia arvoja, joista ensimmäinen on *#vähemmän* kuin toinen. Esimerkiksi ``linguacode\nlähtö(1 - < 5) # true\ntuotos(5 < 1) # false\n`` \n\n- **<=** vertaillaan numeerisia arvoja, joista ensimmäinen on *#pienempi tai yhtä suuri* toinen yksi. Esimerkiksi ``linguacode\nlähtö(1 <= 5) # true\ntuotos(5 <= 1) # false\n`` \n\n- **==** vertaa numeerinen tai tekstiä arvoja, joista ensimmäinen on *#equal* toinen yksi. Esimerkiksi ``linguacode\ntuotos(5 == 5) # true\ntuotos(5 == 1) # false\ntuotos(\"sotilas\" == \"sotilas\") # true\ntuotos(\"Hei\" == \"Helo\") # false\n`` \n\n- **!=** vertaa numeerinen tai tekstiä arvoja, joista ensimmäinen on *#ei vastaa* toinen yksi. Esimerkiksi ``linguacode\ntuotos(5 != 1) # true\ntuotos(5 != 5) # false\ntuotos(\"Hei\" != \"Helo\") # true\ntuotos(\"sotilas\" != \"sotilas\") # false\n`` \n\n- **ei()** palauttaa päinvastainen tulos mikä tahansa numeerinen tai tekstiä verrattuna. Esimerkiksi ``linguacode\nlähtö(ei(1 > 5)) # true\nlähtö(ei(5 == 5)) # false\nlähtö(ei(false)) # true\nlähtö(ei(true)) # false\n``",
        "booleanOperatorsLogicalTitle":"Boolen operaattorit",
        "booleanOperatorsLogicalContent":"Joten me tiedämme, miten kirjoittaa mitään ehdollinen lausunto, mutta usein meidän täytyy yhdistää useita ehtoja yhdessä, ja sen pohjalta suorittaa joitakin toimintoja. Yhdistämällä ehtoja tapahtuu boolen operaattorit. \n\n- Command \"**ja**\" yhdistää kaksi ehtoa, yksi, joka on nimeltään **totta** kun molemmat ehdot ovat *tosi* ja **false** kun ainakin yksi seuraavista ehdoista on *väärä*. Esimerkiksi ``linguacode\ntuotos(5 > 1 և 10 < 100) # true\nulostulo(20 < 100 և 1 > 5) # false\n`` \n\n- Command \"**tai**\" yhdistää kaksi ehtoa, yksi, joka on nimeltään **totta** kun ainakin yksi seuraavista ehdoista on *todellinen* ja **false** kun kaksi ehtoa ovat *false*. Esimerkiksi ``linguacode\ntuotos(5 > 1 tai 100 < 10) # true\nulostulo(20 > 100 tai 1 > 5) # false\n``",
        "booleanOperatorsExecutingPriorityTitle":"Täytäntöönpanosta ensisijaisten",
        "booleanOperatorsExecutingPriorityContent":"Opimme miten yhdistää 2 ehtoja, mutta he voivat olla enemmän kuin 2, joka perustuu ohjelman sisältöä. Siinä tapauksessa, että ehtoja voidaan yhdistää toisiinsa *vasen-oikea*, kunnes ne muodostavat yhden ehdon.\n\n#### Esimerkiksi ``linguacode\ntuotos(5 < 1 և 1 < 7 tai 1 >= 3 tai 9 == 9)\n` tämä on sama kuin ``linguacode\nlähtö(false և tosi tai epätosi tai tosi)\n`` anna on yhdistää **1th** ja **2** \"**false ja true**\" olosuhteet yksi․ ``linguacode\nlähtö(väärä tai epätosi tai tosi)\n``sitten **1+2** kunnossa **3.** \"**väärä tai epätosi**\" ``linguacode\nlähtö(vääriä tai oikeita)\n` ja lopuksi **1+2+3** kunnossa **4.** \"**false tai true**\"․ ``linguacode\nlähtö(totta)\n` Ja niin me yhdistää 4-olosuhteet. Voimme yhdistää useampia ehtoja, että tavalla. \n\nJoskus meidän täytyy muuttaa vasemmalta oikealle yhdistämällä prioriteetti käyttämällä suluissa. \n\n#### Esimerkiksi ``linguacode\ntuotos(5 < 1 և (1 < 7 tai (1 >= 3 tai 9 == 9)))\n`` \n\ntämä on sama kuin ``linguacode\nlähtö(false և (tosi tai (vääriä tai oikeita)))\n`` anna on yhdistää **3.** **4.** \"**false tai true**\" olosuhteet ``linguacode\nlähtö(vääriä tai (vääriä tai oikeita))\n`` kun se **2** kunnossa **3+4** ehto \"**false tai true**\" ``linguacode\nlähtö(false և totta)\n` ja nyt katsotaanpa yhdistää **1th** kunnossa **2+(3+4)**. Se on \"**false ja true**\" ``linguacode\nlähtö(false)\n` Ja niin, me näki, että tulos on muuttunut vaihtuvia yhdistämällä prioriteetti."
      },
      "syntaxInfo":{
        "modalTitle":"Komento-opas",
        "cheatSheetTitle":"Cheat sheet",
        "lesson":"Opetusohjelma"
      }
    }
  },
  "modules":{
    "ide":{
      "title":"<b> Hotkeys</b>",
      "undo":"Kumoa",
      "redo":"Redo",
      "selectAll":"Valitse kaikki",
      "run":"Ajaa",
      "terminal":"Terminaali"
    },
    "program":{
      "program":"Ohjelma",
      "sourceCode":"Lähdekoodi",
      "functionArgumentSyntaxError":"Funktion argumentti syntaksivirhe ${line} line.",
      "undefinedVariable":"\"${variable}\" - muuttuja ei määritelty ${line} line.",
      "indentError":"Tilaa virhe ${line} line.",
      "hackAttempt":"Hack yritys. \"${ip}\" ip-osoitteesi on tallennettu tietokantaan.",
      "syntaxError":"Syntax error",
      "timeout":"Koota timeout. Varmista, että koodi ei ole infinity silmukka.",
      "true":"totta",
      "false":"väärä",
      "NaN":"tuntematon",
      "null":"tuntematon",
      "Infinity":"infinity",
      "undefined":"määrittelemätön"
    },
    "programListGroup":{
      "programs":"Ohjelmat"
    },
    "terminal":{
      "hotkeys":"<b> Hotkeys</b>",
      "undo":"Kumoa",
      "redo":"Redo",
      "selectAll":"Valitse kaikki",
      "terminal":"Terminaali"
    }
  },
  "buttons":{
    "loginButton":{
      "signIn":"Kirjaudu sisään"
    },
    "menuButton":{
      "settings":"Asetukset",
      "logOut":"Kirjaudu ulos"
    }
  },
  "panels":{
    "header":{
      "title":"Kotiin"
    }
  },
  "elements":{
    "emptyProgramListForOthersComponent":{
      "programNotFoundForOthers":"Käyttäjä ei tarvitse mitään ohjelmia vielä."
    },
    "emptyProgramListForOwnerComponent":{
      "programNotFoundListForOwner":"Sinulla ei ole mitään ohjelmia vielä.",
      "programNotFoundClickPartFirst":"Napsauta",
      "programNotFoundClickPartSecond":"täällä",
      "programNotFoundClickPartThird":"voit luoda uuden ohjelman."
    },
    "loading":{
      "loading":"Lastaus"
    }
  }
}