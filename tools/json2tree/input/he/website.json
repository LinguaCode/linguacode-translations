{
  "blocks":{
    "controlPanelBlock":{
      "edit":"עריכה",
      "delete":"למחוק"
    },
    "lovePanelBlock":{
      "like":"כמו",
      "liked":"אהבתי",
      "star":"כוכב",
      "starred":"כיכב"
    },
    "moreFromUserBlock":{
      "viewAll":"הצג את כל",
      "moreFromFirst":"יותר מ",
      "moreFromLast":""
    },
    "programListFilterBlock":{
      "sortBy":"מיין לפי",
      "recent":"לאחרונה",
      "views":"צפיות",
      "stars":"כוכבים",
      "likes":"אוהב",
      "random":"אקראי"
    },
    "shareBlock":{
      "link":"קישור",
      "share":"שתף",
      "tweet":"Tweet",
      "textTwitter":"תוכנית \"${programTitle}\" על ידי ${userName} על #LinguaCode ${userPageLink}",
      "descriptionVK":"LinguaCode החברתית קידוד רציף, והוא נועד במיוחד לילדים, שם הם יכולים ללמוד תכנות, לשתף את הקודים עם בשפת האם שלהם, ללא הצורך לדעת אנגלית."
    },
    "userPrimaryInfoBlock":{
      "editProfile":"עריכת פרופיל"
    },
    "userSecondaryInfoBlock":{
      "joinedOn":"הצטרפו אליהן"
    }
  },
  "pages":{
    "errorPage":{
      "title":"שגיאה",
      "explanation":"סליחה, שגיאה קריטית התרחשה בדף זה."
    },
    "landingPage":{
      "title":"LinguaCode: למידה על ידי קידוד",
      "learningByCoding":"למידה <span className=\"masthead--lora-italic\">by Coding</span>",
      "explanation":"אנחנו הופכים את למידת תכנות וקידוד כל כך מלא שמחת חיים, יהיה לך לצחוק בקול רם.",
      "facebookSignIn":"כניסה באמצעות Facebook",
      "or":"או",
      "seeTheListOfPrograms":"רואה את רשימה של תוכניות קיימות",
      "descriptionHead":"החדשה הטובה ביותר ללמוד תכנות.",
      "descriptionBody":"LinguaCode החברתית קידוד רציף, והוא נועד במיוחד לילדים, שם הם יכולים ללמוד תכנות, לשתף את הקודים עם בשפת האם שלהם, ללא הצורך לדעת אנגלית.",
      "advantagesHeadline":"LinguaCode עוזר לך <span className=\"u-emphasized\">learn יותר </span>",
      "advantageTopFirstHeadline":"רב לשוני",
      "advantageTopFirstDescription":"לכתוב תוכניות על שפות ילידים, ולא רק.",
      "advantageTopSecondHeadline":"זה חינם!",
      "advantageTopSecondDescription":"הכל בחינם.",
      "advantageTopThirdHeadline":"התחלה מהירה",
      "advantageTopThirdDescription":"להתחיל זה הרבה יותר קל ממה שאתה חושב!",
      "advantageBottomFirstHeadline":"הדמיון",
      "advantageBottomFirstDescription":"ללמוד, לנסות, ליצור!",
      "advantageBottomSecondHeadline":"חינוך",
      "advantageBottomSecondDescription":"ללמוד תכנות, כמו גם נושאים אחרים.",
      "advantageBottomThirdHeadline":"הקהילה",
      "advantageBottomThirdDescription":"לשתף התוכניות שלך עם חברים, למצוא חברים חדשים.",
      "joinText":"להצטרף <span className=\"u-emphasized\">the community</span> של הלומדים",
      "facebookRegister":"הרשמו עכשיו, זה חינם!"
    },
    "notFoundPage":{
      "title":"דף לא נמצא",
      "explanation":"מצטער, אבל הדף שאתה מנסה להציג אינו קיים.",
      "descriptionPartFirst":"נסה לכיוון",
      "descriptionPartSecond":"לדף הראשי",
      "descriptionPartThird":"במקום זאת."
    },
    "programChangePage":{
      "titleOfEditPage":"ערוך את ${userName}/${title} תכנית",
      "editProgramHeadline":"עריכת תוכנית",
      "editProgramButton":"עריכת תוכנית",
      "titleOfCreatePage":"יצירת תוכנית חדשה",
      "newProgramHeadline":"יצירת תוכנית חדשה",
      "submitProgramButton":"להגיש תוכנית",
      "programContent":"תוכנית מכילה את כל המידע על הקוד שלך.",
      "name":"שם",
      "programNameForm":"תכנית נהדרת שמות קצרות, בלתי נשכח, כמו <b>hello-world</b>.",
      "titleOfProgram":"כותרת",
      "description":"תיאור",
      "validationError":"שגיאת אימות",
      "errorTextForNameLength":"אורך <b>name</b> צריך יותר מ 0 ופחות אז בן 32, הוא מורכב הלטינית סמלים מקפים.",
      "errorTextForName":"זה שם המקור כבר בשימוש על ידי לך.",
      "errorTextForTitle":"אורך <b>title</b> צריך יותר מ-0 ל-פחות מ-128.",
      "errorTextForDescription":"אורך <b>description</b> צריך יותר מ-0 ולא פחות 5120.",
      "errorTextForSource":"אורך <b>source</b> צריך יותר מ-0 ולא פחות 10240."
    },
    "programs":{
      "title":"תוכניות"
    },
    "settingsPage":{
      "title":"הגדרות",
      "publicProfile":"הפרופיל הציבורי",
      "validationError":"שגיאת אימות",
      "username":"שם משתמש",
      "yourUsername":"שם המשתמש שלך",
      "usernameWasAlreadyUsed":"שם המשתמש כבר היה בשימוש",
      "usernameWasReserved":"שם המשתמש שמורות",
      "usernameValidation":"אורך <b>username</b> צריך להיות פחות מ 24 ומכילים קטנות, אותיות לטיניות ומספרים.",
      "name":"שם",
      "yourFirstNameAndLastName":"את השם הפרטי ואת שם המשפחה",
      "nameValidation":"אורך <b>name</b> צריך להיות יותר מ-0 ל-בפחות מ-24",
      "bio":"ביו",
      "tellALittleAboutYourself":"ספר קצת על עצמך",
      "bioValidation":"אורך <b>bio</b> צריך להיות פחות מ-128.",
      "country":"המדינה",
      "select":"בחר",
      "countryValidation":"בחר את כל המדינות",
      "updateProfile":"עדכון הפרופיל"
    }
  },
  "modals":{
    "loginRequiredModal":{
      "signInTitle":"סימן ב",
      "signInDescription":"הפעולה אפשרית רק כאשר אתה מחובר."
    },
    "programDeleteModal":{
      "programDeleteConfirmation":"האם אתה בטוח שברצונך למחוק את התוכנה ?",
      "answerYes":"כן",
      "answerNo":"לא"
    },
    "syntaxInfoModal":{
      "cheatSheet":{
        "outputName":"פלט",
        "outputNameValue":"``linguacode\nפלט(X)\n``",
        "outputDescription":"הדפסים כל ערך X: מספרים, פעולות, טקסט וכל ערכי המשתנה. לדוגמה",
        "outputDescriptionValue":"``linguacode\nפלט(4) # 4\nפלט(\"שלום\") # שלום\nפלט(1+2) # 3\n``",
        "inputName":"קלט",
        "inputNameValue":"``linguacode\nקלט(X)\n``",
        "inputDescription":"כל המשתנה X ערך שהכריז על ידי המשתמש. לדוגמה",
        "inputDescriptionValue":"``linguacode\nקלט(.)\n``",
        "ifElseStatementName":"בדיקת ההצהרה.",
        "ifElseStatementNameValue":"``linguacode\nאם <condition N1> אז\n<operation N1>\nאחר אם <condition N2> אז\n<operation N2>\nאחר\n<operation N3>\n``",
        "ifElseStatementDescription":"פעולות יבוצעו על סמך בתנאי שצוין להיות נכון. לדוגמה",
        "ifElseStatementDescriptionValue":"``linguacode\na = 5\nb = 5\nאם a > b אז\nפלט (\">ב'\")\nאחר. אם a < b אז\nפלט (\"<b\")\nאחר\nפלט(\"b==\") # b == .\n``",
        "loopForName":"מוגבל חוזר",
        "loopForNameValue":"``linguacode\nחוזר <N> פעמים\n<operation>\n``",
        "loopForDescription":"מבצע בלוק של קוד מספר פעמים. לדוגמה",
        "loopForDescriptionValue":"``linguacode\nלחזור 10 פעמים\nפלט(\"שלום\")\n``",
        "loopWhileDoName":"לולאה \"בזמן\"",
        "loopWhileDoNameValue":"``linguacode\nבזמן <condition> אז\n<operation>\n``",
        "loopWhileDoDescription":"\"בזמן\" לולאה מבצעת דרך בלוק של קוד, כל עוד צוין מצבו האמיתי. לדוגמה",
        "loopWhileDoDescriptionValue":"``linguacode\na = 1\nבעוד < 5 אז\nפלט(.)\na = a + 1\n``",
        "loopDoWhileName":"לולאה \"לעשות זמן\"",
        "loopDoWhileNameValue":"``linguacode\nלעשות\n<operation>\nבזמן <condition>\n``",
        "loopDoWhileDescription":"לולאה \"לעשות זמן\" יהיה לחזור על הלולאה כל עוד התנאי מתקיים. לדוגמה",
        "loopDoWhileDescriptionValue":"``linguacode\na = 1\nלעשות \nפלט(.)\na = a + 1\nבעוד < 5\n``",
        "piName":"פאי מתמטי קבוע.",
        "piNameValue":"``linguacode\nפלט(pi)\n``",
        "piDescription":"טביעות מתמטית קבועה <b>pi</b>. לדוגמה",
        "piDescriptionValue":"``linguacode\nפלט(pi) # 3.141592653589793\n``",
        "eNumberName":"אי מתמטי קבוע.",
        "eNumberNameValue":"``linguacode\nפלט(e)\n``",
        "eNumberDescription":"טביעות מתמטית קבועה <b>e</b>. לדוגמה",
        "eNumberDescriptionValue":"``linguacode\nפלט(e) # 2.718281828459045\n``",
        "sqrName":"ריבוע של מספר",
        "sqrNameValue":"``linguacode\nכדורסל או(X)\n``",
        "sqrDescription":"מחזירה את ריבוע של <b>X</b> המספר שהוזן על ידי המשתמש. לדוגמה",
        "sqrDescriptionValue":"``linguacode\nX = 5 \nY = כדורסל או(X) \nפלט(Y) # 25\n``",
        "powName":"כוח של מספר.",
        "powNameValue":"``linguacode\npow(X,Y)\n``",
        "powDescription":"מחזירה את הערך של <b>X</b> הכוח של <b>Y</b>. לדוגמה",
        "powDescriptionValue":"``linguacode\nX = 2 \nY = 5 \nZ = pow(X, Y) \nפלט(Z) # 32\n``",
        "sqrtName":"שורש ריבועי של מספר",
        "sqrtNameValue":"``linguacode\nsqrt(X)\n``",
        "sqrtDescription":"מחזירה את השורש הריבועי של <b>X</b> המספר שהוזן על ידי המשתמש. לדוגמה",
        "sqrtDescriptionValue":"``linguacode\nX = 9 \nY = sqrt(X) \nפלט(Y) # 3\n``",
        "absName":"הערך המוחלט של מספר",
        "absNameValue":"``linguacode\nabs(X)\n``",
        "absDescription":"מחזירה את הערך המוחלט של <b>X</b> המספר שהוזן על ידי המשתמש. לדוגמה՝",
        "absDescriptionValue":"``linguacode\nX = -5 \nY = abs(X) \nפלט(Y) # 5\n``",
        "roundName":"מספר מקיפים.",
        "roundNameValue":"``linguacode\nround(X)\n``",
        "roundDescription":"סיבובים. <b>X</b> מספר למספר השלם הקרוב ביותר ומחזירה את הערך. לדוגמה",
        "roundDescriptionValue":"``linguacode\nX = 2.3 \na = round(X) \nפלט () # 2\n``",
        "floorName":"מספר הקומה",
        "floorNameValue":"``linguacode\nקומה(X)\n``",
        "floorDescription":"סיבובים. <b>X</b> מספר <b>downwards</b> למספר השלם הקרוב ביותר ומחזירה את הערך. לדוגמה",
        "floorDescriptionValue":"``linguacode\nX = 2.6 \na = floor(X) \nפלט () # 2\n``",
        "ceilName":"מספר התאים",
        "ceilNameValue":"``linguacode\nסיל(X)\n``",
        "ceilDescription":"סיבוב של <b>X</b> מספר <b>upwards</b> שלה הקרוב מספר שלם ומחזירה את הערך",
        "ceilDescriptionValue":"``linguacode\nX = 2.2 \na = ceil(X) \nפלט(.) # 3\n``",
        "sinName":"סינוס",
        "sinNameValue":"``linguacode\nsin(X)\n``",
        "sinDescription":"מחזירה את הערך של <b>sine</b> של <b>X</b> מספר. לדוגמה",
        "sinDescriptionValue":"``linguacode\nX = (sin (pi) \nפלט(X) # 0\n``",
        "cosName":"הקוסינוס",
        "cosNameValue":"``linguacode\ncos(X)\n``",
        "cosDescription":"מחזירה את הערך של <b>cosine</b> של <b>X</b> מספר. לדוגמה",
        "cosDescriptionValue":"``linguacode\nX = (cos (pi) \nפלט(X) # -1\n``",
        "tanName":"משיק",
        "tanNameValue":"``linguacode\ntan(X)\n``",
        "tanDescription":"מחזירה את הערך של <b>tangent</b> של <b>X</b> מספר. לדוגמה՝",
        "tanDescriptionValue":"``linguacode\nX = tan(pi) \nפלט(X) # 0\n``",
        "ctgName":"Cotangent",
        "ctgNameValue":"``linguacode\nctg(X)\n``",
        "ctgDescription":"מחזירה את הערך של <b>cotangent</b> של <b>X</b> מספר. לדוגמה՝",
        "ctgDescriptionValue":"``linguacode\nX = ctg(pi/4) \nפלט(X) # 1\n``",
        "arcSinName":"ערך הארקסינוס",
        "arcSinNameValue":"``linguacode\narcsin(X)\n``",
        "arcSinDescription":"מחזירה את הערך שבו סינה מקבל את אותו ערך כמו <b>X</b>. לדוגמה",
        "arcSinDescriptionValue":"``linguacode\na = arcsin(1) \nפלט(.) # pi/2 \n``",
        "arcCosName":"Arccosine",
        "arcCosNameValue":"``linguacode\narccos(X)\n``",
        "arcCosDescription":"מחזירה את הערך שבו קוסינוס מקבל את אותו ערך כמו <b>X</b>. לדוגמה",
        "arcCosDescriptionValue":"``linguacode\na = arccos(1) \nפלט(.) # 0\n``",
        "arcTanName":"ערך הארקטנגנס",
        "arcTanNameValue":"``linguacode\narctan(X)\n``",
        "arcTanDescription":"מחזירה את הערך שבו משיק מקבל את אותו ערך כמו <b>X</b>. לדוגמה",
        "arcTanDescriptionValue":"``linguacode\na = arctan(0) \nפלט(.) # 0\n``",
        "arcCtgName":"Arccotangent",
        "arcCtgNameValue":"``linguacode\narcctg(X)\n``",
        "arcCtgDescription":"מחזירה את הערך שבו cotangent מקבל את אותו ערך כמו <b>X</b>. לדוגמה",
        "arcCtgDescriptionValue":"``linguacode\na = arcctg(1) \nפלט(.) # pi/4\n``",
        "logName":"הלוגריתם",
        "logNameValue":"``linguacode\nlog(X,Y)\n``",
        "logDescription":"מחזירה את הערך של הלוגריתם של <b>X</b> לבסיס <b>Y</b>. לדוגמה",
        "logDescriptionValue":"``linguacode\na = log(3,27) \nפלט(.) # 3\n``",
        "lgName":"המשותף הלוגריתם",
        "lgNameValue":"``linguacode\nlg(Y)\n``",
        "lgDescription":"מחזירה את הערך של הלוגריתם של <b>X</b> לבסיס <b>10</b>. לדוגמה",
        "lgDescriptionValue":"``linguacode\na = lg(100) \nפלט(.) # 10\n``",
        "lnName":"הלוגריתם הטבעי",
        "lnNameValue":"``linguacode\nln(Y)\n``",
        "lnDescription":"מחזירה את הערך של הלוגריתם של <b>X</b> לבסיס <b>e</b>. לדוגמה",
        "lnDescriptionValue":"``linguacode\na = ln(e) \nפלט(.) # 1\n``",
        "randomName":"יצירת מספר אקראי",
        "randomNameValue":"``linguacode\nאקראי(X,[Y])\n``",
        "randomDescription":"אם הפרמטר <b>Y</b> הוא נתון, התוכנה באופן אקראי ליצור ולחזור אקראי מספר שלם מ range<b>[X, Y]</b>. אבל בלי <b>Y</b> פרמטר טווח יהיה <b>[0; X]</b>. לדוגמה",
        "randomDescriptionValueFirst":"``linguacode\nX = 10 \na = random(X) # [0; 10]\nפלט(.) # 4 \n``",
        "randomDescriptionValueSecond":"``linguacode\nX = 5 \nY = 15 \na = random(X,Y) # [5; 15]\nפלט(.) # 12\n``"
      },
      "tutorials":{
        "intro":"מבוא",
        "output":"פלט",
        "variables":"משתנים",
        "input":"קלט",
        "operations":"פעולות",
        "conditions":"תנאים",
        "boolean":"בוליאני",
        "languageAboutLanguageTitle":"על השפה",
        "languageAboutLanguageContent":"LinguaCode נוצר עבור כל אלה, מי רוצה ללמוד תכנות הבסיסיים יותר נוח הדרך. \nללמוד עם LinguaCode זה לא הכרחי ידיעת שפות או כישורים טכניים. כל מה שאתה צריך הוא רוצה ללמוד והתמדה. \n\n#### תכונות:\n- **רב לשוני**\n- **מרובים**\n- **פשוט קוד המקור.**\n- *****חינם\n",
        "languageFeaturesTitle":"תכונות שפה",
        "languageFeaturesContent":"LinguaCode מבוסס על פייתון, פסקל ו-JavaScript, מה שהופך את זה קל להבין, פשוט קוד מקור ואז ללמוד עוד שפת תכנות מהר יותר. \n\n**הנה כל מושגי יסוד של השפה:**\n\n- **כל פקודה מתחיל קו חדש.** \nקוד המקור יהיה יותר פשוט וברור על ידי כך.\n- **פקודות, אפשר יהיה לכתוב שתי אותיות גדולות ואותיות קטנות.** \nזה מאיץ תהליך של תכנות, אבל הוא העדיף לכתוב עם אותיות קטנות.\n- **טקסט יכול להיות כתוב בין מרכאות לבין גרש.** \nבמדינות רבות אין מרכאות בשימוש, אז הנה אתה יכול לבחור נוח גרסה בשבילך.\n- **טקסט שנכתב אחרי הסימן \"\\#\" נחשב אחד ואין לו השפעה על עבודתו של קוד המקור.** \nהערות מסופקים הערות.",
        "outputCommandDefinitionTitle":"פקודה הגדרה.",
        "outputCommandDefinitionContent":"כל תכנית, אשר עושה כמה פעולות, צריך להראות לנו מידע על תוצאה. לכן את כל תכנות מערכות פלט טקסט האפשרות ואת המקום שבו אנחנו יכולים לראות את התוצאה, אשר נקרא **מסופים**. \n\nהפקודה \"*פלט*\" משמש עבור פלט טקסט. \n\n#### לדוגמה \n\"קוד מקור`של linguacode\nפלט(\"שלום\")\n``תוצאה``טרמינל\nשלום\n``",
        "outputPossibleValuesTitle":"ערכים אפשריים",
        "outputPossibleValuesContent":"פלט הפקודה ניתן להדפיס טקסט, מספרים, פעולות מתמטיות ואת ערכי המשתנה.\n\n#### לדוגמה \nקוד המקור. \n``linguacode\nפלט(100)\nפלט(5 * 25)\n``תוצאה``טרמינל\n100\n125\n``",
        "variablesDeclaresAndAssignsTitle":"מכריז והקצאה",
        "variablesDeclaresAndAssignsContent":"לעתים קרובות אנחנו צריכים להציל את הטקסט, את מספר נומרית פעולות במקום עם מטרה להשתמש בו שוב. המכולות, שבו אנחנו יכולים להציל ערכים שונים נקראים **משתנים**. בהתחלה אנחנו חייבים לתת את שם המשתנה, ואז להקצות לו ערך. אחרי זה אנחנו יכולים עיין ערך פשוט על ידי קורא משתנה עם השם שלה. \nמשתנים מאוחסנים זיכרון גישה אקראית (RAM) של המחשב, כאשר אנו משתמשים משתנה, המחשב מחזירה את הערך המתאים כי שם משתנה מ-RAM.\n#### חשוב לזכור\nשמות המשתנים \n**1.** יכול להכיל אותיות, סימנים או ספרות. \n**2.** לא יכול להתחיל במספר \n**3.** לא יכול להכיל מרחב סמלים של פעולות אריתמטיות\n#### לדוגמה \nהדפסת מספר **617** במקום זה \n``linguacode\nפלט(617)\n``\nאנחנו נכתוב\n``linguacode\nX = 617\nפלט(X)\n``\nהתוצאה\n``טרמינל\n617\n`` \nואם אנחנו רוצים פלט את אותו הערך שלוש פעמים, אנחנו נכתוב \n``linguacode\nX = 617\nפלט(X)\nפלט(X)\nפלט(X)\n`` \nהתוצאה \n``טרמינל\n617\n617\n617\n``",
        "variablesPracticalUseTitle":"שימוש מעשי",
        "variablesPracticalUseContent":"כפי שאנו רואים, אנחנו יכולים להקצות את שניהם ואת מספרי טקסט ערכים למשתנים. אבל לעתים קרובות אנחנו צריכים להקצות משתנה ערך כלשהו, אשר היה להקצות עוד אחד. במקרה זה אנו יכולים להקצות כבר קיים משתנה אחד חדש.\n#### לדוגמה \nקוד המקור.\n``linguacode\na = 1\nb = 2\nc = a + b\nפלט(c)\n`` \nהתוצאה\n``טרמינל\n3\n``\n",
        "variablesMultipleUsesTitle":"השימוש מרובים",
        "variablesMultipleUsesContent":"אתה לא צריך ליצור משתנה חדש עבור ערך חדש בכל פעם. אנחנו יכולים גם לשנות את הערכים שהוקצו המשתנים. נוכל להימנע מן מיותר משתנים קוד המקור יהיה יותר פשוט ככה.\n#### לדוגמה\nבואו נניח שיש לנו **100** תפוחים להציל את הערך **תפוחים** משתנה. את מספר התפוחים היה להקטין על-ידי **5** כל יום. \nאנחנו חייבים פלט לספור תפוחים במשך כל היום. \n\nקוד המקור.\n``linguacode\nאפל = 100\nפלט(אפל)\n\nתפוחים = תפוח - 5 # 95\nפלט (אפל)\n\nתפוחים = תפוח - 5 # 90\nפלט(אפל)\n\nתפוחים = תפוח - 5 # 85\nפלט(אפל)\n`` \nהתוצאה\n``טרמינל\n100\n95\n90\n85\n``",
        "inputCommandDefinitionTitle":"פקודה הגדרה.",
        "inputCommandDefinitionContent":"בתכנות אנחנו צריכים את שניהם, פלט, במקרים רבים נתוני קלט. אנחנו צריכים את זה כאשר המשתנים יכולים לקבל כל ערך. אנו יכולים גם לשנות את קוד המקור כל הזמן להקצות ערכים חדשים משתנה, אבל זה לא יעיל, צריך גם זמן. \n\nבמקרה זה אנו משתמשים הפקודה \"*קלט*\". \n\nוהנה דוגמה פשוטה של תכנית אשר יציאות כפולות של המספר שהוזן על ידי המשתמש. ``linguacode\nקלט(מספר)\nפלט(מס ' * 2)\n`` אחרי ריצה של תוכנית זו אנו רואים את הסימן \"**>**\" מה שאומר תכנית החלה ואנחנו צריכים להזין נתונים חסרים. לאחר הזנת מספר כלשהו ולחיצה **להיכנס** אנו רואים כפול של הכנסת מספר. ``טרמינל\n>617\n1234\n`בעיקר אנחנו צריכים לכתוב תוכניות, אשר יכול להיות בשימוש על ידי אנשים שלא יודעים תכנות.",
        "inputWorkMechanismTitle":"עובד מנגנון",
        "inputWorkMechanismContent":"עכשיו תנו לנו לראות איך פקודת קלט עובד. לדוגמה, יש לנו תוכנית זו ``linguacode\nפלט(\"אנא הזן את האישורים שלך:\")\nפלט(\"Name:\")\nקלט(שם)\nפלט(\"שם משפחה:\")\nקלט(שם משפחה)\nפלט(\"Hi\" + שם + \"\" + שם משפחה)\n`` כפי שאנו רואים יש 6 קווים בתכנית שלנו. \nלאחר הפעלת אותו אנו יכולים לראות כי התוכנית עבדה עד קו 3.``מסוף\nאנא הזן את האישורים שלך:\nשם:\n>\n`` אחרי הכניסה פספס את הנתונים, אנחנו רואים את זה עכשיו זה עבד עד קו 5.``מסוף\nאנא הזן את האישורים שלך:\nשם:\n>ימית\nשם משפחה:\n>\n`` סוף סוף לאחר הזנת האחרון התעסקו נתונים תכנית העבודה ואת הסוף.``מסוף\nאנא הזן את האישורים שלך:\nשם:\n>ימית\nשם משפחה:\n>Chamchyan\nשלום, נחת Chamchyan\n` כל כך ראינו את זה עם פקודה זו התוכנית עובדת חלק על ידי חלק הדורשים קלט פספס נתונים.",
        "operationsArithmeticOperatorsTitle":"פעולות אריתמטיות",
        "operationsArithmeticOperatorsContent":"ב LinguaCode זה אפשרי ליישם פעולות אריתמטיות פשוטות כמו **+**, **-**, **\\***, **/**. \n\nלדוגמה, התוכנית הזאת עושה את כל מפעילי חשבון עם **1** ו **2** מספרי. ``linguacode\nפלט(1 + 2) # 3\nפלט(1 - 2) # -1\nפלט(1 * 2) # 2\nפלט(1 / 2) # 0.5\n` ` #### חשוב לזכור \nכפי שאנו יודעים מתמטיקה כפל של המשתנה עם משתנה נוסף או מספר ניתן לכתוב בלי סמל של כפל. לדוגמה *7 פעמים X* תכתב **7 X** *X פעמים Y* כמו **XY**. \nאבל בתכנות, חשוב לכתוב את הסמל של כפל. לדוגמה **7 \\* X** או **X \\* י**.",
        "operationsExecutingPriorityTitle":"פעולות ביצוע עדיפות",
        "operationsExecutingPriorityContent":"שני במתמטיקה וגם בתכנות, אם יש חילוק או כפל, אנחנו קודם כל לעשות אותם רק אחרי שנעשה את חיבור וחיסור. \n\n#### לדוגמה ``linguacode\nX = 10 + 2 * 4 - 2\n# X = 10 + 8 - 2\n# X = 18 - 2\n# X = 16\n` אבל אנחנו יכולים לשנות את ביצוע סדר העדיפויות על-ידי שימוש בסוגריים. \n#### לדוגמה ``linguacode\nX = (10 + 2) * (4 - 2)\n# X = 12 * (4 - 2)\n# X = 12 * 2\n# X = 24\n``תכנות אפשר להשתמש בסוגריים גם אם הם מיותרים. \nזה יהיה לא נכון אבל הוא העדיף לכתוב פשוט וברור קוד המקור, אשר יהיה קל להבין לאחרים.",
        "operationsNumbersTitle":"מספרים",
        "operationsNumbersContent":"כפי שאנו יודעים <a href=\"https://en.wikipedia.org/wiki/Number\" target=\"_blank\">numbers</a> הם אובייקטים מתמטיים נהג לספור, למדוד תווית. \nישנם 5 סוגים של מספרים. אנחנו נתמודד עם כולם, חוץ מורכבות numbes \n- ** מספרים טבעיים** **1**, **2**, ...``linguacode\nפלט(7 + 4) # 13\n`` \n- **מספרים שלמים** ..., **-1**, **0**, **1**, ...``linguacode\nפלט(-6 * 5 + -3) # -33\n`` \n- **המספרים רציונליים** **1/2**, **2/3**, **0.125**, ...``linguacode\nפלט(0.617 * 2 * 1000) # 1234\n`` \n- **מספרים ממשיים** **√2**, **1.62**, ...``linguacode\nפלט(2/3 + 1/2) # 1\n``",
        "operationsSumOfStringAndNumberTitle":"סכום של מחרוזות ומספרים",
        "operationsSumOfStringAndNumberContent":"כפי שאנו רואים, זה אפשרי להוסיף שני מספרים וטקסטים אחד עם השני, שבו התוצאה קווים משולבים בקו אחד. אבל לעתים קרובות אנחנו צריכים לקבל קו, שבו יהיו בשימוש ערך מספרי. במקרה זה ניתן להוסיף טקסט למספר, שבו התוצאה המספר יהיה שונה, בשילוב עם הטקסט כטקסט.``linguacode\ntext = \"שם\" + 365 + \"ימים בשנה\"\n# text = \"שם\" + \"365\" + \"ימים בשנה\"\n# טקסט = \"ישנם 365\" + \"ימים בשנה\"\n# טקסט = \"ישנם 365 ימים בשנה\"\n` ` #### חשוב לזכור \nעם קווי אנחנו יכולים לעשות רק על ידי הוספת המבצע. בזמן ביצוע פעולות אחרות יגרור שגיאה.",
        "conditionsCommandsIfTitle":"הפקודה \"אם\"",
        "conditionsCommandsIfContent":"לפעמים בתכנות אנחנו צריכים לבצע כמה פעולות בהתבסס על תנאי. בשביל זה יש מצב בדיקת פקודות כמו \"אם\", \"אם-אחרת\" ו \"אחר\". \n\nכתיבת טופס של פקודה \"**אם**\" ``linguacode\nאם <condition> אז\n<operation>\n` כאן בין פקודות \"אם\" ו \"אז\" יש מצב, ואחרי זה מתוך קו חדש ואחרי **4 מקומות** כתוב פעולה (או פעולות), אשר ייעשה אם המשפט הוא נכון. \n\n#### לדוגמה ``linguacode\na = 5\nb = 2\nאם a > b אז\nפלט (\">ב'\")\n``",
        "conditionsCommandsIfElseTitle":"הפקודה \"אם-אחרת\"",
        "conditionsCommandsIfElseContent":"אז אנחנו יודעים איך להשתמש מותנה הצהרה של תוכניות. כעת נדון המקרה כאשר התנאי הוא שקר.\n\nכתיבה בצורת \"**אם-אחר**\" הצהרה ``linguacode\nאם <condition> אז\n<operation N1>\nאחר\n<operation N2>\n` כאן אחרי הפקודה \"אם\" יש פקודה חדשה \"אחר\". ומן הקו החדש, אחרי 4 מקומות נכתב המבצע, אשר ייעשה, אם הזכיר התנאי הוא שקר.\n\n#### לדוגמה ``linguacode\na = 5\nb = 10\nאם a > b\nפלט (\">ב'\")\nאחר\nפלט(\"b<\")\n``",
        "conditionsCommandsElseIfTitle":"הפקודה \"אחר-אם\"",
        "conditionsCommandsElseIfContent":"יש לנו כבר דנו שבו הפקודה תבוצע בהתבסס על התנאי להיות אמת או שקר. אבל לפעמים אנחנו צריכים לבדוק את תנאי אחד או יותר באותו הזמן. \n\nכתיבה בצורת \"**אם-אחר-אם**\" הצהרה``linguacode\nאם <condition N1> אז\n<operation N1>\nאחר אם <condition N2> אז\n<operation N2>\nאחר\n<operation N3>\n` כאן אנחנו חייבים לבדוק את תנאי אחד או יותר. במקרה של \"אחר-אם\" כותב טופס יכול להיות 1 או יותר \"אחר-אם\" הצהרות בין פקודות \"אם\" ו \"אחר\". \n\n#### לדוגמה ``linguacode\na = 5\nb = 5\nאם a > b אז\nפלט (\">ב'\")\nאחר. אם a < b אז\nפלט (\"<b\")\nאחר\nפלט(\"b==\")\n``",
        "booleanTypesBooleanTitle":"תיאור",
        "booleanTypesBooleanContent":"אנחנו כבר יודעים איך לבדוק את הצהרות וחלק מהם יכול להיות *נכון* (22 > 18) או *שקר* (16 > 18). לפעמים בגלל האורך של בדיקת מצב קו, זה הופך להיות קשה לקרוא את קוד המקור. הנה בא לעזור ערכים בוליאניים \n\n- **אמת** ``linguacode\nמצב = true\nפלט(תנאי) #נכון\n`` \n\n- **שקר**``linguacode\nמצב = false\nפלט(תנאי) #שווא\n`` כל בוליאני השוואה ידוע לנו ישוב אחד של נתון ערכים \n\nExemple של *נכון* השוואה ``linguacode\nמצב = 1 < 5\nפלט(תנאי) # נכון\n`` Exemple של *שקר* השוואה ``linguacode\nמצב = 10 < 5\nפלט(תנאי) # שווא\n` אז במצב בודק את הפקודות אנו יכולים להשתמש במשתנים עם ערכים בוליאניים. \n\n#### לדוגמה ``linguacode\nפלט(\"לכתוב את המספר \"\":\")\nקלט(.)\n\nפלט(\"לכתוב מספר ב',\")\nקלט(ב)\n\ncondition1 = > b\ncondition2 = a < b\n\nאם condition1 אז\nתוצאה = \"> ב'\"\nאחר אם condition2 אז\nתוצאה = \"< b\"\nאחר\nתוצאה = \"a == b\"։\nפלט(\"Result:\" + result)\n``",
        "booleanOperatorsComparisonTitle":"השוואה מפעילי",
        "booleanOperatorsComparisonContent":"במצב בדיקת פקודות שכבר השתמשו בסמלים של \"גדול מ -\" > \"פחות\" < השוואה המפעילים. אבל כעת אנו יכולים להשתמש בכל מפעילים אחרים ידוע לנו. \n\n- **>** משווה בין ערכים מספריים, שבהם הראשון הוא *#גדול יותר* מאשר את השני. לדוגמה ``linguacode\nפלט(5 > 1) # נכון\nפלט(1 > 5) # שווא\n`` \n\n- **>=** משווה בין ערכים מספריים, שבהם הראשון הוא *#גדול או שווה ל* את השני. לדוגמה ``linguacode\nפלט(5 >= 5) # נכון\nפלט(1 >= 5) # שווא\n`` \n\n- **<** משווה בין ערכים מספריים, שבהם הראשון הוא *#פחות* מאשר את השני. לדוגמה ``linguacode\nפלט(1 < 5) # נכון\nפלט(5 < 1) # שווא\n`` \n\n- **<=** משווה בין ערכים מספריים, שבהם הראשון הוא *#פחות או שווה ל* את השני. לדוגמה ``linguacode\nפלט(1 <= 5) # נכון\nפלט(5 <= 1) # שווא\n`` \n\n- **==** משווה את מספרי או ערכי טקסט, שבהם הראשון הוא *#שווה* את השני. לדוגמה ``linguacode\nפלט(5 == 5) # נכון\nפלט(5 == 1) # שווא\nפלט(\"חייל\" == \"חייל\") # נכון\nפלט(\"שלום\" == \"דרדר\") # שווא\n`` \n\n- **!=** משווה את מספרי או ערכי טקסט, שבהם הראשון הוא *לא שווה* את השני. לדוגמה ``linguacode\nפלט(5 != 1) # נכון\nפלט(5 != 5) # שווא\nפלט(\"שלום\" != \"הילו\") # נכון\nפלט(\"חייל\" != \"חייל\") # שווא\n`` \n\n- **()** מחזירה הפוך התוצאה של כל מספרי או טקסט השוואה. לדוגמה ``linguacode\nפלט(לא(1 > 5)) # נכון\nפלט(לא(5 == 5)) # שווא\nפלט(לא(false)) # נכון\nפלט(לא(true)) # שווא\n``",
        "booleanOperatorsLogicalTitle":"אופרטורים בוליאניים",
        "booleanOperatorsLogicalContent":"אז אנחנו יודעים איך לכתוב את כל תנאי ההצהרה, אבל לעתים קרובות אנחנו צריכים לשלב מספר תנאים, ובהתבסס על זה לבצע פעולות מסוימות. את שילוב התנאים מתקיים על ידי אופרטורים בוליאניים. \n\n- מצווה \"**ו**\" משלב שני תנאים: אחד, אשר נקרא **אמת** כאשר שני התנאים מתקיימים *נכון* **שקר** כאשר לפחות אחד מהתנאים הוא *שקר*. לדוגמה ``linguacode\nפלט(5 > 1 և 10 < 100) # נכון\nפלט(20 < 100 և 1 > 5) # שווא\n`` \n\n- מצווה \"**או**\" משלב שני תנאים: אחד, אשר נקרא **אמת** כאשר לפחות אחד מהתנאים הוא *אמת* ו **שקר** כאשר שני התנאים *שקר*. לדוגמה ``linguacode\nפלט(5 > 1 או 100 < 10) # נכון\nפלט(20 > 100 או 1 > 5) # שווא\n``",
        "booleanOperatorsExecutingPriorityTitle":"ביצוע עדיפות",
        "booleanOperatorsExecutingPriorityContent":"אנחנו למדנו איך לשלב את 2 התנאים, אבל הם יכולים להיות יותר מ 2, מבוסס על תוכן התכנית. במקרה זה, יהיו תנאים בשילוב עם אחד את השני *משמאל לימין*, עד שהם יוצרים תנאי אחד.\n\n#### לדוגמה ``linguacode\nפלט(5 < 1 և 1 < 7 או 1 >= 3 או 9 == 9)\n` זה אותו הדבר כמו ``linguacode\nפלט(false և אמת או שקר או אמת)\n`` בוא נשלב **1th** ו **2th** \"** - false, true**\" תנאי אחד․ ``linguacode\nפלט(false או true או false)\n``אז **1+2** המצב עם **3th** \"**כוזב או שקרי**\" ``linguacode\nפלט(true או false)\n`` סוף סוף **1+2+3** המצב עם **4** \"**true או false**\"․ ``linguacode\nפלט(נכון)\n`` וגם אנו משלבים 4 תנאי אחד. אנחנו יכולים לשלב יותר את תנאי הדרך. \n\nלפעמים אנחנו צריכים לשנות משמאל לימין שילוב עדיפות באמצעות סוגריים. \n\n#### לדוגמה ``linguacode\nפלט(5 < 1 և (1 < 7 או (1 >= 3 או 9 == 9)))\n`` \n\nזה אותו הדבר כמו ``linguacode\nפלט(false և (נכון או (true או false)))\n`` בוא נשלב **3th** ו **4** \"**true או false**\" תנאי אחד ``linguacode\nפלט(שווא או (true או false))\n` אחרי זה **2th** תנאי עם **3+4** מצבו יהיה \"**true או false**\" ``linguacode\nפלט(false և נכון)\n` ` , ולבסוף, בואו נאחד **1th** תנאי עם **2+(3+4)**. זה יהיה \"**false, true**\" ``linguacode\nפלט(false)\n`` אז, ראינו את זה והתוצאה היא השתנה עם שינוי שילוב עדיפות."
      },
      "syntaxInfo":{
        "modalTitle":"הפקודה מדריך",
        "cheatSheetTitle":"שליף",
        "lesson":"הדרכה"
      }
    }
  },
  "modules":{
    "ide":{
      "title":"<b> Hotkeys</b>",
      "undo":"לבטל",
      "redo":"שוב",
      "selectAll":"בחר את כל",
      "run":"לרוץ",
      "terminal":"מסוף"
    },
    "program":{
      "program":"תכנית",
      "sourceCode":"קוד המקור.",
      "functionArgumentSyntaxError":"פונקצית ארגומנט שגיאת תחביר ב ${line} קו.",
      "undefinedVariable":"\"${variable}\" משתנה לא מוגדר ${line} קו.",
      "indentError":"מרחב שגיאה ${line} קו.",
      "hackAttempt":"ניסיון גרזן. \"${ip}\" כתובת ה-ip ניצל את הנתונים שלנו.",
      "syntaxError":"שגיאת תחביר",
      "timeout":"הידור פסק זמן. ודא כי הקוד לא יש אינסוף לולאה.",
      "true":"נכון",
      "false":"שווא",
      "NaN":"לא ידוע",
      "null":"לא ידוע",
      "Infinity":"אינפיניטי",
      "undefined":"לא מוגדר"
    },
    "programListGroup":{
      "programs":"תוכניות"
    },
    "terminal":{
      "hotkeys":"<b> Hotkeys</b>",
      "undo":"לבטל",
      "redo":"שוב",
      "selectAll":"בחר את כל",
      "terminal":"מסוף"
    }
  },
  "buttons":{
    "loginButton":{
      "signIn":"סימן ב"
    },
    "menuButton":{
      "settings":"הגדרות",
      "logOut":"השלט"
    }
  },
  "panels":{
    "header":{
      "title":"בבית"
    }
  },
  "elements":{
    "emptyProgramListForOthersComponent":{
      "programNotFoundForOthers":"למשתמש אין כל תוכניות כבר."
    },
    "emptyProgramListForOwnerComponent":{
      "programNotFoundListForOwner":"את לא צריכה את כל תוכניות כבר.",
      "programNotFoundClickPartFirst":"לחץ",
      "programNotFoundClickPartSecond":"כאן",
      "programNotFoundClickPartThird":"כדי ליצור תכנית חדשה."
    },
    "loading":{
      "loading":"טעינה"
    }
  }
}