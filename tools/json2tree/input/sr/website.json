{
  "blocks":{
    "controlPanelBlock":{
      "edit":"Уреди",
      "delete":"Уклонити"
    },
    "lovePanelBlock":{
      "like":"Као",
      "liked":"Волео",
      "star":"Звезда",
      "starred":"Филм глумио"
    },
    "moreFromUserBlock":{
      "viewAll":"Погледајте све",
      "moreFromFirst":"Више од",
      "moreFromLast":""
    },
    "programListFilterBlock":{
      "sortBy":"Сортирај по",
      "recent":"Последњих",
      "views":"Поглед",
      "stars":"Звезде",
      "likes":"Воли",
      "random":"Случајни"
    },
    "shareBlock":{
      "link":"Линк",
      "share":"Поделите",
      "tweet":"Твитнуть",
      "textTwitter":"Програм \"${programTitle}\" ${userName} на #LinguaCode ${userPageLink}",
      "descriptionVK":"LinguaCode-то је Платформа социјалног кодирање и дизајниран посебно за децу, где они могу да науче програмирање и деле своје кодове са матерњи језик и без потребе да знају енглески."
    },
    "userPrimaryInfoBlock":{
      "editProfile":"Измените профил"
    },
    "userSecondaryInfoBlock":{
      "joinedOn":"Придружила"
    }
  },
  "pages":{
    "errorPage":{
      "title":"Грешка",
      "explanation":"Нажалост, дошло је до критичне грешке на овој страници."
    },
    "landingPage":{
      "title":"LinguaCode: учење путем кодирања",
      "learningByCoding":"Обука <span className=\"masthead--lora-italic\">by Coding</span>",
      "explanation":"Ми би учење програмирања и кодирање привреде, диспензионих, пун радости и живота, ви ћете се смејати наглас.",
      "facebookSignIn":"Пријавите се на Facebook",
      "or":"или",
      "seeTheListOfPrograms":"Погледај листа постоје програми",
      "descriptionHead":"Боље је нови начин за учење програмирања.",
      "descriptionBody":"LinguaCode-то је Платформа социјалног кодирање и дизајниран посебно за децу, где они могу да науче програмирање и деле своје кодове са матерњи језик и без потребе да знају енглески.",
      "advantagesHeadline":"LinguaCode ће вам помоћи да <span className=\"u-emphasized\">learn боље </span>",
      "advantageTopFirstHeadline":"Вишејезични",
      "advantageTopFirstDescription":"Пишу програме на вашем матерњем језику, и не само.",
      "advantageTopSecondHeadline":"То је бесплатно!",
      "advantageTopSecondDescription":"Све је бесплатно.",
      "advantageTopThirdHeadline":"Куицк старт",
      "advantageTopThirdDescription":"Први кораци много лакше него што мислите!",
      "advantageBottomFirstHeadline":"Машта",
      "advantageBottomFirstDescription":"Научите да, пробајте, направите!",
      "advantageBottomSecondHeadline":"Образовање",
      "advantageBottomSecondDescription":"Уче програмирање, као и другим темама.",
      "advantageBottomThirdHeadline":"Заједница",
      "advantageBottomThirdDescription":"Поделите вашим програмима са пријатељима и пронађу нове пријатеље.",
      "joinText":"Придружите <span className=\"u-emphasized\">the community</span> ученика",
      "facebookRegister":"Региструјте се сада, то је бесплатно!"
    },
    "notFoundPage":{
      "title":"Страница Није Пронађена",
      "explanation":"Жао нам је, али страница коју покушавате да видите, не постоји.",
      "descriptionPartFirst":"Покушајте да иду у",
      "descriptionPartSecond":"Почетна",
      "descriptionPartThird":"уместо."
    },
    "programChangePage":{
      "titleOfEditPage":"Уређивање програма ${userName}/${title}",
      "editProgramHeadline":"Измена програма",
      "editProgramButton":"Софтвер За Уређивање",
      "titleOfCreatePage":"Створити нови програм",
      "newProgramHeadline":"Створити нови програм",
      "submitProgramButton":"Програм Представи",
      "programContent":"Програм садржи све информације о вашем коду.",
      "name":"Име",
      "programNameForm":"Велика имена програма кратко и незабораван, као <b>hello-world</b>.",
      "titleOfProgram":"Име",
      "description":"Опис",
      "validationError":"Грешка провере",
      "errorTextForNameLength":"Дужина <b>name</b> треба више од 0 а мање, 32, онда он мора да се састоји од латинских симбола и цртица.",
      "errorTextForName":"То је име извора се већ користи вама.",
      "errorTextForTitle":"Дужина <b>title</b> више од 0 а мање 128.",
      "errorTextForDescription":"Дужина <b>description</b> више од 0 а мање од 5120.",
      "errorTextForSource":"Дужина <b>source</b> више од 0 а мање 10240."
    },
    "programs":{
      "title":"Програм"
    },
    "settingsPage":{
      "title":"Опције",
      "publicProfile":"Јавни профил",
      "validationError":"Грешка провере",
      "username":"Корисничко име",
      "yourUsername":"Ваше корисничко име",
      "usernameWasAlreadyUsed":"Корисничко име се већ користи",
      "usernameWasReserved":"Корисничко име је сачуван",
      "usernameValidation":"Дужина <b>username</b> би требало да буде мање од 24 и да садржи мала слова латиничног писма и бројеве.",
      "name":"Име",
      "yourFirstNameAndLastName":"Ваше име и презиме",
      "nameValidation":"Дужина <b>name</b> би требало да буде више од 0 а мање од 24",
      "bio":"Био",
      "tellALittleAboutYourself":"Рећи мало о себи",
      "bioValidation":"Дужина <b>bio</b> мора бити мања од 128.",
      "country":"Земља",
      "select":"изаберите",
      "countryValidation":"Изаберите било коју од земаља",
      "updateProfile":"Ажурирање профила"
    }
  },
  "modals":{
    "loginRequiredModal":{
      "signInTitle":"Знак у",
      "signInDescription":"Операција је могуће само када сте пријављени на систем."
    },
    "programDeleteModal":{
      "programDeleteConfirmation":"Да ли сте сигурни да желите да уклоните апликацију ?",
      "answerYes":"да",
      "answerNo":"нема"
    },
    "syntaxInfoModal":{
      "cheatSheet":{
        "outputName":"Излаз",
        "outputNameValue":"`linguacode\nизлазна(к)\n`",
        "outputDescription":"Штампање било које вредности x: бројеви, операције, текста и вредности променљивих. На пример",
        "outputDescriptionValue":"`linguacode\nизлаз(4) # 4\nзакључак(\"здраво\") # здраво\nизлаз(1+2) # 3\n`",
        "inputName":"Улаз",
        "inputNameValue":"`linguacode\nулаз(x)\n`",
        "inputDescription":"Било је променљива x вредност декларације корисника. На пример",
        "inputDescriptionValue":"`linguacode\nулазни(а)\n`",
        "ifElseStatementName":"Провера изјава",
        "ifElseStatementNameValue":"`linguacode\nако <condition N1> онда\n<operation N1>\nјош ако <condition N2> онда\n<operation N2>\nјош\n<operation N3>\n`",
        "ifElseStatementDescription":"Операције ће се вршити на основу наведених услов. На пример",
        "ifElseStatementDescriptionValue":"`linguacode\nа = 5\nб = 5\nако је А > Б, онда\nналаз(\"А > Б\")\nјош ако је a < b, онда је\nналаз(\"А < Б\")\nјош\nзакључак(\"Б == А\") # Б == А\n`",
        "loopForName":"Друштва понови",
        "loopForNameValue":"`linguacode\nпоновите <N> пут\n<operation>\n`",
        "loopForDescription":"Обавља блок кода неколико пута. На пример",
        "loopForDescriptionValue":"`linguacode\nпоновите 10 пута\nзакључак(\"Здраво\")\n`",
        "loopWhileDoName":"Циклус \"Док Не\"",
        "loopWhileDoNameValue":"`linguacode\nа онда <condition>\n<operation>\n`",
        "loopWhileDoDescription":"У \"док\" петља се извршава преко блок кода, док одређени услов тачан. На пример",
        "loopWhileDoDescriptionValue":"`linguacode\nа = 1\nа < 5 онда\nИзлазна(а)\nА = А + 1\n`",
        "loopDoWhileName":"Циклус \"Није Време\"",
        "loopDoWhileNameValue":"`linguacode\nрадим\n<operation>\nиако <condition>\n`",
        "loopDoWhileDescription":"Циклус \"није време\" ће поновити циклус, док је услов тачан. На пример",
        "loopDoWhileDescriptionValue":"`linguacode\nа = 1\nрадим \nИзлазна(а)\nА = А + 1\nу то време, као што је < 5\n`",
        "piName":"пи математичка константа",
        "piNameValue":"`linguacode\nизлаз(пи)\n`",
        "piDescription":"Отисци математичка константа <b>pi</b>. На пример",
        "piDescriptionValue":"`linguacode\nизлаз(пи) # 3.141592653589793\n`",
        "eNumberName":"е математичка константа",
        "eNumberNameValue":"`linguacode\nизлаз(е)\n`",
        "eNumberDescription":"Отисци математичка константа <b>e</b>. На пример",
        "eNumberDescriptionValue":"`linguacode\nизлаз(е) # 2.718281828459045\n`",
        "sqrName":"Квадрат броја",
        "sqrNameValue":"`linguacode\nkv(к)\n`",
        "sqrDescription":"Враћа квадрат <b>X</b> број је унео корисник. На пример",
        "sqrDescriptionValue":"`linguacode\nК = 5 \nГ = kv(к) \nизлаз(г) # 25\n`",
        "powName":"Снага број",
        "powNameValue":"`linguacode\nпау(к,Г)\n`",
        "powDescription":"Враћа вредност <b>X</b> на власт <b>Y</b>. На пример",
        "powDescriptionValue":"`linguacode\nК = 2 \nУ = 5 \nХ = пр(x, Y) \nизлаз(Z) и # 32\n`",
        "sqrtName":"Квадратни корен броја",
        "sqrtNameValue":"`linguacode\nфункција sqrt(к)\n`",
        "sqrtDescription":"Враћа квадратни корен из <b>X</b> број је унео корисник. На пример",
        "sqrtDescriptionValue":"`linguacode\nК = 9 \nИ = корен(к) \nизлаз(г) # 3\n`",
        "absName":"Апсолутна вредност броја",
        "absNameValue":"`linguacode\nАБС(к)\n`",
        "absDescription":"Враћа апсолутну вредност <b>X</b> број је унео корисник. На пример՝",
        "absDescriptionValue":"`linguacode\nК = -5 \nГ = АБС(к) \nизлаз(г) # 5\n`",
        "roundName":"Број заокруживања",
        "roundNameValue":"`linguacode\nокругли(к)\n`",
        "roundDescription":"Туре у <b>X</b> броја до најближег целине и враћа вредност. На пример",
        "roundDescriptionValue":"`linguacode\nК = 2.3 \nа = круг(к) \nИзлазна(а) # 2\n`",
        "floorName":"Број поду",
        "floorNameValue":"`linguacode\nпол(x)\n`",
        "floorDescription":"Туре у <b>X</b> број <b>downwards</b> на најближи цео број и враћа вредност. На пример",
        "floorDescriptionValue":"`linguacode\nК = 2.6 \nа = пол(x) \nИзлазна(а) # 2\n`",
        "ceilName":"Број хем",
        "ceilNameValue":"`linguacode\nметод ceil(к)\n`",
        "ceilDescription":"Око <b>X</b> број <b>upwards</b> до свог најближи цео број и врати вредност",
        "ceilDescriptionValue":"`linguacode\nК = 2.2 \nа = Лсв(к) \nИзлазна(а) # 3\n`",
        "sinName":"Синус",
        "sinNameValue":"`linguacode\nсин(к)\n`",
        "sinDescription":"Враћа вредност <b>sine</b> од <b>X</b> број. На пример",
        "sinDescriptionValue":"`linguacode\nК = грех(пи) \nизлазна(к) # 0\n`",
        "cosName":"Косинус",
        "cosNameValue":"`linguacode\nсоѕ(к)\n`",
        "cosDescription":"Враћа вредност <b>cosine</b> од <b>X</b> број. На пример",
        "cosDescriptionValue":"`linguacode\nК = соѕ(пи) \nизлазна(к) # -1\n`",
        "tanName":"Тангенс",
        "tanNameValue":"`linguacode\nТан(к)\n`",
        "tanDescription":"Враћа вредност <b>tangent</b> од <b>X</b> број. На пример՝",
        "tanDescriptionValue":"`linguacode\nК = тангента(пи) \nизлазна(к) # 0\n`",
        "ctgName":"Котангенс",
        "ctgNameValue":"`linguacode\nКТГ(к)\n`",
        "ctgDescription":"Враћа вредност <b>cotangent</b> од <b>X</b> број. На пример՝",
        "ctgDescriptionValue":"`linguacode\nК = КТГ(π/4) \nизлазна(к) # 1\n`",
        "arcSinName":"Аркус",
        "arcSinNameValue":"`linguacode\nизрачунати arcsin(к)\n`",
        "arcSinDescription":"Враћа вредност, где сине добија исту вредност, као <b>X</b>. На пример",
        "arcSinDescriptionValue":"`linguacode\nа = арксинуса(1) \nИзлазна(а) # пи/2 \n`",
        "arcCosName":"Арккосинус",
        "arcCosNameValue":"`linguacode\narccos(к)\n`",
        "arcCosDescription":"Враћа вредност, где је косинус добија исту вредност, као <b>X</b>. На пример",
        "arcCosDescriptionValue":"`linguacode\nа = arccos(1) \nИзлазна(а) # 0\n`",
        "arcTanName":"Аркус тангенс",
        "arcTanNameValue":"`linguacode\nједнакости arctg(к)\n`",
        "arcTanDescription":"Враћа вредност, где касательная добија исту вредност, као <b>X</b>. На пример",
        "arcTanDescriptionValue":"`linguacode\nа = једнакости arctg(0) \nИзлазна(а) # 0\n`",
        "arcCtgName":"Arccotangent",
        "arcCtgNameValue":"`linguacode\narcctg(к)\n`",
        "arcCtgDescription":"Враћа вредност, где котангенс добија исту вредност, као <b>X</b>. На пример",
        "arcCtgDescriptionValue":"`linguacode\nа = arcctg(1) \nИзлазна(а) # пи/4\n`",
        "logName":"Логаритам",
        "logNameValue":"`linguacode\nчасопис(x,Y)\n`",
        "logDescription":"Враћа вредност логаритма <b>X</b> на базу <b>Y</b>. На пример",
        "logDescriptionValue":"`linguacode\nа = часопис(3,27) \nИзлазна(а) # 3\n`",
        "lgName":"Децимални логаритам",
        "lgNameValue":"`linguacode\nЛХ(г)\n`",
        "lgDescription":"Враћа вредност логаритма <b>X</b> на базу <b>10</b>. На пример",
        "lgDescriptionValue":"`linguacode\nа = ЛХ(100) \nИзлазна(а) # 10\n`",
        "lnName":"Природни логаритам",
        "lnNameValue":"`linguacode\nЛН(г)\n`",
        "lnDescription":"Враћа вредност логаритма <b>X</b> на базу <b>e</b>. На пример",
        "lnDescriptionValue":"`linguacode\nа = ЛН(е) \nИзлазна(а) # 1\n`",
        "randomName":"Случајних бројева, генерисање",
        "randomNameValue":"`linguacode\nслучајна(к,[Y])\n`",
        "randomDescription":"Ако је параметар <b>Y</b> дат, програм ће насумично генерисати и врати случајан цео број од range<b>[к;] </b>. Али без аргумената <b>Y</b> опсег ће бити <b>[0; к]</b>. На пример",
        "randomDescriptionValueFirst":"`linguacode\nК = 10 \nа = случајно(к) # [0; 10]\nИзлазна(А) # 4 \n`",
        "randomDescriptionValueSecond":"`linguacode\nК = 5 \nЗ = 15 \nа = случајно(x,Y) # [5; 15]\nизлаз () # 12\n`"
      },
      "tutorials":{
        "intro":"Увод",
        "output":"Излаз",
        "variables":"Променљиве",
        "input":"Улаз",
        "operations":"Операције",
        "conditions":"Услови",
        "boolean":"Логичко",
        "languageAboutLanguageTitle":"О Језику",
        "languageAboutLanguageContent":"LinguaCode створена за све оне који желе да савладају Основе програмирања у више погодан начин. \nУче са LinguaCode то није важно знање страних језика или техничке вештине. Све што вам је потребно је жељу да уче и исполнительность. \n\n#### Карактеристике:\n- **Мулти-лангуаге**\n- **Крст платформа пружамо гради**\n- **Једноставан изворни код**\n- **** Бесплатно\n",
        "languageFeaturesTitle":"Језичке Карактеристике",
        "languageFeaturesContent":"LinguaCode се заснива на Питхон, Паскал и јавасцрипт, што га чини лако разумети уз помоћ једноставан изворни код, а затим научити други језик програмирање више брзо. \n\n**Овде представљене све основне појмове језика:**\n\n- **Свака екипа почиње новим редом.** \nИзворни код ће бити више једноставан и интуитиван начин.\n- **Тимови могу да буду написани великим и малим словима.** \nТо убрзава процес програмирања, али он је више волео да пише са малим.\n- **Текст може бити написана између оба навода и апострофы.** \nУ многим земљама нема наводника за коришћење, тако да овде можете да изаберете најпогоднији за вас опцију.\n- **Текст, написан после знака \"\\#\" сматра коментаром и не утиче на рад код.** \nКоментари су дизајнирани за белешке.",
        "outputCommandDefinitionTitle":"Одређивање тима",
        "outputCommandDefinitionContent":"Сваки програм који чини неке операције, треба да нам покаже информације о резултату. Зато је свим системима програмирање текста, могућност повлачења и место, где можемо да видимо резултат, који се зове **терминал**. \n\nТим \"*излаз*\" се користи за приказ текста. \n\n#### На пример \nLinguacode изворни код`\nзакључак(\"Здраво\")\nТерминал `резултат`\nПоздрав\n`",
        "outputPossibleValuesTitle":"Могуће вредности",
        "outputPossibleValuesContent":"Закључак тима може да штампа текст, бројеви, математичке операције и вредности променљивих.\n\n#### На пример \nИзворни код \n`linguacode\nизлаз(100)\nизлаз(5 * 25)\nТерминал `резултат`\n100\n125\n`",
        "variablesDeclaresAndAssignsTitle":"Оглас и именовање",
        "variablesDeclaresAndAssignsContent":"Често нам је потребно да сачувате текст, бројеви и нумеричких операција негде са циљем да га користите поново. Контејнери у којима можете да сачувате различите вредности, називају **променљиве**. Прво морамо дати име променљиве, а затим доделити јој вредност. Након тога, можемо да пређемо на то једноставно зове променљиве са њеним именом. \nПроменљиве се налазе у рам меморије (РАМ) рачунара и када користимо променљиву, рачунар враћа вредност одговара име променљиве од рам меморије.\n#### Важно је запамтити\nИмена променљивих \n**1.** Може да садржи слова, знакови или бројеви \n**2.** Не може да почне са бројеве \n**3.** Не може садржати размак и знаке аритметичких операција.\n#### На пример \nЗа штампање број **617** уместо тога \n`linguacode\nизлаз(617)\n`\nми ћемо писати\n`linguacode\nК = 617\nизлазна(к)\n`\nРезултат\n`терминал\n617\n` \nИ ако желимо да на излазу исту вредност три пута, ми ћемо писати \n`linguacode\nК = 617\nизлазна(к)\nизлазна(к)\nизлазна(к)\n` \nРезултат \n`терминал\n617\n617\n617\n`",
        "variablesPracticalUseTitle":"Практична употреба",
        "variablesPracticalUseContent":"Као што видимо, можемо одредити као нумерички, тако и текстуалне вредности за променљиве. Али често ми треба да доделите променљиве неку вредност, која је била заказана још један. У овом случају можемо доделити већ постојећи променљиву на нов начин.\n#### На пример \nИзворни код\n`linguacode\nа = 1\nБ = 2\nЦ = А + Б\nизлаз(са)\n` \nРезултат\n`терминал\n3\n`\n",
        "variablesMultipleUsesTitle":"Множина коришћење",
        "variablesMultipleUsesContent":"Не морате да креирате нову променљиву нову вредност сваки пут. Можемо такође да промените вредности додељене променљивим. Ми ћемо избегавати из додатних варијабли и изворни код ће бити лакши излаз.\n#### На пример\nХајде да претпоставимо да имамо **100** јабуке и одржи вредност у **јабука** променљиве. Број јабуке смањује на **5** сваки дан. \nМи треба да излазни број јабука на сваки дан. \n\nИзворни код\n`linguacode\nјабука = 100\nизлаз(јабука)\n\nјабука = јабука - 5 # 95\nизлаз (јабука)\n\nјабука = јабука - 5 # 90\nизлаз(јабука)\n\nјабука = јабука - 5 # 85\nизлаз(јабука)\n` \nРезултат\n`терминал\n100\n95\n90\n85\n`",
        "inputCommandDefinitionTitle":"Одређивање тима",
        "inputCommandDefinitionContent":"У програмирању је потребно као излаз и у многим случајевима за унос података. Ово Нам је потребно, када променљиве може да узме било коју вредност. Можемо такође да промените изворни код сваки пут, и присвоји нове вредности променљиве, али то није ефикасан и да захтева превише времена. \n\nУ овом случају користимо команду \"*пријава*\". \n\nИ ево једноставан пример програма који приказује два броја унете од стране корисника. `linguacode\nулаз(број)\nизлаз(број * 2)\n` Након покретања овог програма видећемо симбол \"**>**\", што значи да је програм већ је почела, а ми би требало да унесете податке који недостају. Након уноса било ког броја и притиска **тип** видећемо две задате бројеве. `терминал\n>617\n1234\n`Углавном нам је потребан за писање програма који се могу користити људи који чак и не знају програмирање.",
        "inputWorkMechanismTitle":"Механизам рада",
        "inputWorkMechanismContent":"Сада хајде да видимо како тима за унос. На пример, имамо програм `linguacode\nзакључак(\"молимо вас, унесите своје акредитиве:\")\nзакључак(\"име:\")\nуноса(име)\nзакључак(\"презиме:\")\nунос(презиме)\nзакључак(\"Здраво\" + име + \"\" + презиме)\n` Као што видимо, постоји 6 редова у нашем програму. \nНакон њеног лансирања, видимо да је програм радио пре линије 3`.`терминал\nМолимо вас, унесите своје акредитиве:\nИме:\n>\n` Након увођења недостајућих података, видећемо, да је сада он је радио до линије 5.`терминал\nМолимо вас, унесите своје акредитиве:\nИме:\n>Сеа\nПрезиме:\n>\n` И, коначно, после уноса последњег забрљао програми података ће радити и крај`.`терминал\nМолимо вас, унесите своје акредитиве:\nИме:\n>Сеа\nПрезиме:\n>Chamchyan\nЗдраво, Море Chamchyan\n` Дакле, ми смо видели, да са овом командом програм ради у деловима, захтевају да унесете податке који недостају.",
        "operationsArithmeticOperatorsTitle":"Аритметичке операције",
        "operationsArithmeticOperatorsContent":"У LinguaCode може да обавља једноставне аритметичке операције, као што су **+**, **-**, **\\***, **/**. \n\nНа пример, овај програм ће учинити све аритметичке операторе са **1** и **2** бројеве. `linguacode\nизлаз(1 + 2) # 3\nизлаз(1 - 2) # -1\nизлаз(1 * 2) # 2\nизлаз(1 / 2) # 0.5\n` Да ` #### Важно је запамтити \nКако да знамо да у математици множење променљиве са друге променљиве или бројеви могу бити написани без знака множења. На пример, *7 пута к* ће бити написан **7х** или *к пута г* *ху***. \nАли у програмирању је веома важно да се напише симбол множења. На пример, **7 \\* к** или **к \\* Г**.",
        "operationsExecutingPriorityTitle":"Извршење трансакција приоритет",
        "operationsExecutingPriorityContent":"Као у математици и програмирању, ако постоји подела или множење, онда прво да их и само после тога, како да вршимо сабирање и одузимање. \n\n###Linguacode# на пример, `\nК = 10 + 2 * 4 - 2\n# К = 10 + 8 - 2\n# К = 18 - 2\n# К = 16\n` Али, ми можемо променити приоритет извршења користећи угласте заграде. \n###Linguacode# на пример, `\nК = (10 + 2) * (4 - 2)\n# К = 12 * (4 - 2)\n# К = 12 * 2\n# К = 24\n`У програмирању можемо користити заграде, чак и ако су непотребне. \nОн не ће бити у реду, али он је више волео да пише једноставно и разумљиво код, који ће бити лако да разумеју, за друге.",
        "operationsNumbersTitle":"Бројеви",
        "operationsNumbersContent":"Као што знамо, <a href=\"https://en.wikipedia.org/wiki/Number\" target=\"_blank\">numbers</a>-математичке предмете, који се користе за бројање, мерење и ознаке. \nПостоји 5 врста бројева. Ми ћемо да се бави са свима њима, поред комплекса numbes \n- ** природних бројева** **1**, **2**, ...`linguacode\nизлаз(7 + 4) # 13\n` \n- **цели бројеви** ..., **-1**, **0**, **1**, ...`linguacode\nизлаз(-6 * 5 + -3) # -33\n` \n- **рационални бројеви** **1/2**, **2/3**, **0.125**, ...`linguacode\nизлаз(0.617 * 2 * 1000) # 1234\n` \n- **реални бројеви** **√2**, **1.62**, ...`linguacode\nизлаз(2/3 + 1/2) # 1\n`",
        "operationsSumOfStringAndNumberTitle":"Збир редова и бројева",
        "operationsSumOfStringAndNumberContent":"Као што видимо, можете да додате бројеве и текстове једни са другима, у које линије резултат комбинују у једну линију. Али често нам је потребно да се ред, у којој ће се користити нумеричке вредности. У овом случају, можете да додате текст у број, као резултат чији број ће се мењати и у комбинацији са текстом, као текст.`linguacode\nтекст = \"\"+ 365 + \"дана у години\"\n# текст = \"\" + \"365\" + \"дана у години\"\n# текст = \"постоји 365\" + \"дана у години\"\n# текст = \"има 365 дана у години\"\n` Да ` #### Важно је запамтити \nСа линије можемо да урадимо само додавањем рада. Приликом обављања других послова ће довести до грешке.",
        "conditionsCommandsIfTitle":"Тим \"Ако\"",
        "conditionsCommandsIfContent":"Понекад у програмирању нам је потребно да урадите неке операције, у зависности од стања. За то има статус провера тима, као и \"ако\", \"Ако-онда\" и \"у супротном, ако\". \n\nПисаној форми тима \"**ако**\" `linguacode\nако <condition> онда\n<operation>\n` Овде између тимова \"ако\" и \"онда\" је стање, и већ после тога са новим редом, а после **4 места** написано операције (или трансакције), што ће бити учињено, ако је тврдња тачна. \n\n###Linguacode# на пример, `\nа = 5\nБ = 2\nако је А > Б, онда\nналаз(\"А > Б\")\n`",
        "conditionsCommandsIfElseTitle":"Тим \"Ако-Онда\"",
        "conditionsCommandsIfElseContent":"Дакле, ми знамо како да користе условни оператор у програм. Сада ћемо размотрити случај, када је услов нетачан.\n\nПисаној форми \"**ако-онда је**\" изјава `linguacode\nако <condition> онда\n<operation N1>\nјош\n<operation N2>\n` Овде после команде \"ако\" се појавио нови тим \"још\". И са новим редом, после 4 размакницу забележен операција, која ће бити извршена ако наведени услов нетачан.\n\n###Linguacode# на пример, `\nа = 5\nБ = 10\nако је А > Б\nналаз(\"А > Б\")\nјош\nзакључак(\"б<\")\n`",
        "conditionsCommandsElseIfTitle":"Тим \"Још-Ако\"",
        "conditionsCommandsElseIfContent":"Ми смо већ разговарали, да је команда ће бити извршена на основу стању да буде истинита или лажна. Али понекад нам је потребно да проверите више услова истовремено. \n\nПисаној форми \"**ако-онда-ако**\" изјава`linguacode\nако <condition N1> онда\n<operation N1>\nјош ако <condition N2> онда\n<operation N2>\nјош\n<operation N3>\n` Овде ми треба да проверите више од један услов. У случају \"још-ако\" писаној форми може бити 1 или више \", ако\" изјаве између тимова \"ако\" и \"другачије\". \n\n###Linguacode# на пример, `\nа = 5\nб = 5\nако је А > Б, онда\nналаз(\"А > Б\")\nјош ако је a < b, онда је\nналаз(\"А < Б\")\nјош\nзакључак(\"Б ==\")\n`",
        "booleanTypesBooleanTitle":"Опис",
        "booleanTypesBooleanContent":"Ми већ знамо како да проверите извештаје, а неке од њих могу бити *истина* (22 > 18) или *лаж* (16 > 18). Понекад због дужине провера стања линије, његова постаје тешко читати изворни код. Овде долази у помоћ логичке вредности \n\n- **истина** `linguacode\nуслов = True\nизлаз(статус) #истина\n` \n\n- **лаж**`linguacode\nуслов = лаж\nизлаз(статус) #лажне\n` Било логично поређење познатих нам враћа један од наведених вредности \n\nПример *истина* поређење `linguacode\nуслов = 1 < 5\nизлаз(статус) # истина\n` Пример *лажне* поређење `linguacode\nуслов = 10 < 5\nизлаз(статус) # лажне\n` Дакле, у стање да испитамо тима можемо да користимо променљиве са булевыми вредностима. \n\n###Linguacode# на пример, `\nзакључак(\"напише \"а\":\")\nулазни(а)\n\nизлаз(\"напиши школа \"б\":\")\nулазни(б)\n\nусловие1 = А > Б\nусловие2 = А < Б\n\nако условие1 онда\nрезултат = \"а > б\"\nјош ако условие2 онда\nрезултат = \"< б\"\nјош\nрезултат = \"= = б\"։\nзакључак(\"резултат:\" + резултат)\n`",
        "booleanOperatorsComparisonTitle":"Оператори поређења",
        "booleanOperatorsComparisonContent":"У услов за проверу команди смо већ користили симболе \"више\" > и \"мање\" < оператори поређења. Али сада овде можемо користити било који други оператери, познати нам. \n\n- **>** упоређује нумеричке вредности, у коме је први *#више*, него други. На пример, `linguacode\nизлаз(5 > 1) # истина\nизлаз(1 > 5) # лажне\n` \n\n- **>=** упоређује нумеричке вредности, у коме је први *#више или једнако* други. На пример, `linguacode\nизлаз(5 >= 5) # истина\nизлаз(1 >= 5) # лажне\n` \n\n- **<** упоређује нумеричке вредности, у коме је први *#мање*, него други. На пример, `linguacode\nизлаз(1 < 5) # истина\nизлаз(5 < 1) # лажне\n` \n\n- **<=** упоређује нумеричке вредности, у коме је први *#мање или једнако* други. На пример, `linguacode\nизлаз(1 <= 5) # истина\nизлаз(5 <= 1) # лажне\n` \n\n- **==** упоређивање бројева или текстуалних вредности, у коме је први *#једнак* други. На пример, `linguacode\nизлаз(5 == 5) # истина\nизлаз(5 == 1) # лажне\nзакључак(\"војника\" == \"војник\") # истина\nзакључак(\"Здраво\" == \"хеликоптер\") # лажне\n` \n\n- **!=** поређење бројева или текстуалних вредности, у коме је први *#не брига* други. На пример, `linguacode\nизлаз(5 != 1) # истина\nизлаз(5 != 5) # лажне\nзакључак(\"Здраво\" != \"Хэло\") # истина\nзакључак(\"војника\" != \"војник\") # лажне\n` \n\n- **не()** враћа преокрене резултат било који број или текстуалну поређење. На пример, `linguacode\nизлаз(не(1 > 5)) # истина\nизлаз(не(5 == 5)) # лажне\nизлаз(не(нетачно)) # истина\nизлаз(да не(тачно)) # лаж\n`",
        "booleanOperatorsLogicalTitle":"Логички оператори",
        "booleanOperatorsLogicalContent":"Дакле, ми знамо како пишу неки условни оператор, али често нам је потребно да се комбинују неколико услова у једном, и на основу њега да изврши неки рад. Комбинација услова одвија путем логичких оператора. \n\n- Тим \"**и**\" комбинује два услова у један, који се зове **истина** када су оба услова *истина* и **лаж** ако је најмање један од услова *лаж*. На пример, `linguacode\nизлаз(5 > 1 և 10 < 100) # истина\nизлаз(20 < 100 և 1 > 5) # лажне\n` \n\n- Тим \"**или**\" комбинује два услова у један, који се зове **истина** ако је најмање један од услова-*истина* и **лаж** када се два услова ће бити *лажна*. На пример, `linguacode\nизлаз(5 > 1 или 100 < 10) # истина\nизлаз(20 > 100 или 1 > 5) # лажне\n`",
        "booleanOperatorsExecutingPriorityTitle":"Приоритет извршавања",
        "booleanOperatorsExecutingPriorityContent":"Научили смо како да се комбинују 2 услови, али они могу бити више од 2, на основу садржаја програма. У овом случају, услови ће се комбиновати једни са другима од *са леве стране на десно*, док се не формирају један услов.\n\n###Linguacode# на пример, `\nизлаз(5 < 1 և 1 < 7 или 1 >= 3 и 9 == 9)\n` то је исто као `linguacode\nизлаз(лажне և True или false или True)\n` хајде да се придруже **1.** и **2ом** \"**лаж и истина**\" услова у једном․ `linguacode\nизлаз(false или лаж или Истина)\n`онда **1+2** стање са **3** \"**лажи или лажи**\" `linguacode\nизлаз(лаж или Истина)\n` и, коначно,**1+2+3** стање **4.** \"**лаж или Истина**\"․ `linguacode\nизлаз(истина)\n` Дакле, ми комбинујемо 4 услови у једном. Можемо комбиновати неколико услова, на тај начин. \n\nПонекад треба да се мења с лева на десно комбинација приоритета уз помоћ заграда. \n\n###Linguacode# на пример, `\nизлаз(5 < 1 և (1 < 7 или (1 >= 3 и 9 == 9)))\n` \n\nто је исто као `linguacode\nизлаз(лажне և (True или false или True)))\n` хајде да се придруже **3.** **4.** \"**лаж или Истина**\" услови у `linguacode\nизлаз(false или (лаж или Истина))\n` након што је **2ом** стање са **3+4** стање ће бити \"**лаж или Истина**\" `linguacode\nизлаз(лажне և истина)\n` и, коначно, хајде да се придруже **1.** стање са **2+(3+4)**. То ће бити \"**лаж и истина**\" `linguacode\nзакључак(лажни)\n` Дакле, видели смо да је резултат се мења са променом комбинације приоритет."
      },
      "syntaxInfo":{
        "modalTitle":"Тим водич",
        "cheatSheetTitle":"Креветац",
        "lesson":"Уџбеник"
      }
    }
  },
  "modules":{
    "ide":{
      "title":"<b> Hotkeys</b>",
      "undo":"Ундо",
      "redo":"Понављање",
      "selectAll":"Изаберите све",
      "run":"Покрените",
      "terminal":"Терминал"
    },
    "program":{
      "program":"Програм",
      "sourceCode":"Изворни код",
      "functionArgumentSyntaxError":"Функција синтакса аргумент грешка у линији ${line}.",
      "undefinedVariable":"У \"${variable}\" променљива није дефинисана у реду ${line}.",
      "indentError":"Простор грешка у линији ${line}.",
      "hackAttempt":"Покушај хаковања. Ваш \"${ip}\" ИП адреса је сачувана у нашој бази података.",
      "syntaxError":"Синтаксна грешка",
      "timeout":"Направите тајм-аут. Уверите се да се кôд не до бесконачности.",
      "true":"истина",
      "false":"лажне",
      "NaN":"непознато",
      "null":"непознато",
      "Infinity":"инфинити",
      "undefined":"неопределено"
    },
    "programListGroup":{
      "programs":"Програм"
    },
    "terminal":{
      "hotkeys":"<b> Hotkeys</b>",
      "undo":"Ундо",
      "redo":"Понављање",
      "selectAll":"Изаберите све",
      "terminal":"Терминал"
    }
  },
  "buttons":{
    "loginButton":{
      "signIn":"Знак у"
    },
    "menuButton":{
      "settings":"Опције",
      "logOut":"Излаз"
    }
  },
  "panels":{
    "header":{
      "title":"Код куће"
    }
  },
  "elements":{
    "emptyProgramListForOthersComponent":{
      "programNotFoundForOthers":"Корисник нема програма док нема."
    },
    "emptyProgramListForOwnerComponent":{
      "programNotFoundListForOwner":"Немате никакве програме док се не.",
      "programNotFoundClickPartFirst":"Кликните",
      "programNotFoundClickPartSecond":"овде",
      "programNotFoundClickPartThird":"да бисте направили нови програм."
    },
    "loading":{
      "loading":"Преузимање"
    }
  }
}